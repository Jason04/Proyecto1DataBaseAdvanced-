/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.proyecto1dba.GraphicInterface;

//import ManejoDeArchivos.XMLConfiguracion;
//import db_managment.Direct_Control_BD;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;

import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintService;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.text.AbstractDocument;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author Jason Salazar
 */
public class PanelPedido extends javax.swing.JPanel {
DateFormat dateFormatIng = new SimpleDateFormat("yyyy/MM/dd");
    public static final int FACTURACION_CALL = 0;
    public static final int DEVOLUCION_CALL  = 1;
    public static final int CREDITO_CALL     = 2;
    public static final int APARTADO_CALL    = 3;
    public static final int MOD_FACT_CALL    = 4;
    public static final int MOD_DEV_CALL     = 5;
    public static final int MOD_CRED_CALL    = 6;
    public static final int MOD_APART_CALL   = 7;
    
    public static final String CONCEPT_FACTURA ="Cancelada";
    public static final String CONCEPT_APARTADO ="Apartado";
    public static final String CONCEPT_CREDITO= "Credito";
    public static final String CONCEPT_DEVOLUCION="Devolucion";
    public static final String DETALLE_FACT= "Fact Num ";
    public static final String DETALLE_APART="Apartado Num Fact ";
    public static final String DETALLE_CRED="Credito Num Fact ";

    public int _callType;
    
    private boolean _savePress;
    private boolean _printPress;
    private boolean _vueltoPress;
    
    private boolean _justSave;
    
    /**
     * Creates new form NewJPanel
     * @param pCallType
     */
    public PanelPedido(int pCallType) {
        _callType = pCallType;
        _justSave = true;
        _savePress = false;
        _printPress = false;
        initComponents();
       // setTittle();
        
    }

    PanelPedido() {
        initComponents();
    }
    
    public void refreshFocus(){
        jTable_Factura.requestFocusInWindow();

    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog_CrearProducto = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jTextField_codigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton_CrearProducto = new javax.swing.JButton();
        jButton_CancelarCrearProducto = new javax.swing.JButton();
        jFormattedTextField_precioProducto = new javax.swing.JFormattedTextField();
        jFormattedTextField_cantidadProducto = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jDialog_VerProducto = new javax.swing.JDialog();
        jLayeredPane_VerProducto = new javax.swing.JLayeredPane();
        jLabel_Nombre = new javax.swing.JLabel();
        jLabel_Cantidad = new javax.swing.JLabel();
        jLabel_PrecioUnitario = new javax.swing.JLabel();
        jLabel_datoNomb = new javax.swing.JLabel();
        jLabel_datoCant = new javax.swing.JLabel();
        jLabel_datoPrecio = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel_Descripcion = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel_datoDescrip = new javax.swing.JLabel();
        jDialog_BuscarProductoPorCod = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jButton_BusqueProducto = new javax.swing.JButton();
        jButton_CancelaBusquedaProducto = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField_busqueProducto = new javax.swing.JTextField();
        jLabel_CodNoEncontrado = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jDialog_DescuentoUnitario = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel_DescripcionDescUnitario = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton_IngresarDescuento = new javax.swing.JButton();
        jButton_CancelarDescuentoUnitario = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jFormattedTextField_PrecioRegular = new javax.swing.JFormattedTextField();
        jFormattedTextField_descUnitario = new javax.swing.JFormattedTextField();
        jFormattedTextField_RebajaDelDesc = new javax.swing.JFormattedTextField();
        jFormattedTextField_PrecioConDesc = new javax.swing.JFormattedTextField();
        jLabel19 = new javax.swing.JLabel();
        jDialog_CrearCliente = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel_nombreCliente = new javax.swing.JLabel();
        jLabel_telefonoCliente = new javax.swing.JLabel();
        jLabel_direccionCliente = new javax.swing.JLabel();
        jLabel_FechaCumpleanos = new javax.swing.JLabel();
        jFormattedTextField_nombreCliente = new javax.swing.JFormattedTextField();
        jFormattedTextField_telefono = new javax.swing.JFormattedTextField();
        jFormattedTextField_direccionCliente = new javax.swing.JFormattedTextField();
        jButton_CrearCliente = new javax.swing.JButton();
        jButton_CancelarCrearCliente = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        dateChooserCombo_CrearCliente = new datechooser.beans.DateChooserCombo();
        jDialog_darVuelto = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jFormattedTextField_totalFact = new javax.swing.JFormattedTextField();
        jFormattedTextField_pagoVueltoContado = new javax.swing.JFormattedTextField();
        jFormattedTextField_vuelto = new javax.swing.JFormattedTextField();
        jButton_aceptarVuelto = new javax.swing.JButton();
        lbPagoTitle = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jFormattedTextField_pagoVueltoTarjeta = new javax.swing.JFormattedTextField();
        jLabel28 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jFormattedTextField_totalDolares = new javax.swing.JFormattedTextField();
        jFormattedTextField_cantidadDolares = new javax.swing.JFormattedTextField();
        jFormattedTextField_tipoCambio = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Factura = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jFormattedTextField_Total = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        jFormattedTextField_Cliente = new javax.swing.JFormattedTextField();
        trashBtt = new javax.swing.JLabel();
        saveBtt = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        BuscarP = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();

        jDialog_CrearProducto.setTitle("Crear Producto");
        jDialog_CrearProducto.setMinimumSize(new java.awt.Dimension(400, 230));
        jDialog_CrearProducto.setUndecorated(true);
        jDialog_CrearProducto.setResizable(false);
        jDialog_CrearProducto.setLocationRelativeTo(null);
        jDialog_CrearProducto.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_codigoKeyTyped(evt);
            }
        });
        jPanel2.add(jTextField_codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 52, 240, -1));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Codigo del Producto");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 55, 120, -1));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre del Producto");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 93, 120, -1));

        jTextField_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_nombreKeyTyped(evt);
            }
        });
        jPanel2.add(jTextField_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 90, 240, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Precio del Producto");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 131, 120, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Cantidad del Producto");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 162, 130, -1));

        jButton_CrearProducto.setText("Aceptar");
        jButton_CrearProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearProductoActionPerformed(evt);
            }
        });
        jButton_CrearProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_CrearProductoKeyPressed(evt);
            }
        });
        jPanel2.add(jButton_CrearProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, -1, -1));

        jButton_CancelarCrearProducto.setText("Cancelar");
        jButton_CancelarCrearProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelarCrearProductoActionPerformed(evt);
            }
        });
        jButton_CancelarCrearProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_CancelarCrearProductoKeyPressed(evt);
            }
        });
        jPanel2.add(jButton_CancelarCrearProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 190, -1, -1));

        jFormattedTextField_precioProducto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jFormattedTextField_precioProducto.setText("0.00");
        jFormattedTextField_precioProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextField_precioProductoFocusGained(evt);
            }
        });
        jFormattedTextField_precioProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_precioProductoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_precioProductoKeyTyped(evt);
            }
        });
        jPanel2.add(jFormattedTextField_precioProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 128, 240, -1));

        jFormattedTextField_cantidadProducto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextField_cantidadProducto.setText("0");
        jFormattedTextField_cantidadProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextField_cantidadProductoFocusGained(evt);
            }
        });
        jFormattedTextField_cantidadProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_cantidadProductoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_cantidadProductoKeyTyped(evt);
            }
        });
        jPanel2.add(jFormattedTextField_cantidadProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 159, 240, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Crear Producto");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 12, -1, -1));

        jDialog_CrearProducto.getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 230));

        jDialog_VerProducto.setTitle("Ver Producto");
        jDialog_VerProducto.setMinimumSize(new java.awt.Dimension(470, 210));
        jDialog_VerProducto.setModal(true);
        jDialog_VerProducto.setUndecorated(true);
        jDialog_VerProducto.setResizable(false);
        jDialog_VerProducto.setLocationRelativeTo(null);
        jDialog_VerProducto.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane_VerProducto.setBackground(new java.awt.Color(153, 153, 153));
        jLayeredPane_VerProducto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLayeredPane_VerProducto.setMaximumSize(new java.awt.Dimension(470, 210));
        jLayeredPane_VerProducto.setMinimumSize(new java.awt.Dimension(470, 210));
        jLayeredPane_VerProducto.setOpaque(true);
        jLayeredPane_VerProducto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_Nombre.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Nombre.setText("Nombre");
        jLayeredPane_VerProducto.add(jLabel_Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 60, 29));

        jLabel_Cantidad.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Cantidad.setText("Cantidad");
        jLayeredPane_VerProducto.add(jLabel_Cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 60, 29));

        jLabel_PrecioUnitario.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_PrecioUnitario.setText("Precio Unitario");
        jLayeredPane_VerProducto.add(jLabel_PrecioUnitario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 90, 29));

        jLabel_datoNomb.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel_datoNomb.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_datoNomb.setText("NOMBRE DEL PRODUCTO");
        jLayeredPane_VerProducto.add(jLabel_datoNomb, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 360, 29));

        jLabel_datoCant.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel_datoCant.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_datoCant.setText("CANTIDAD");
        jLayeredPane_VerProducto.add(jLabel_datoCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 360, 29));

        jLabel_datoPrecio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel_datoPrecio.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_datoPrecio.setText("PRECIO UNITARIO");
        jLayeredPane_VerProducto.add(jLabel_datoPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 360, 29));

        jButton2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 51));
        jButton2.setText("Aceptar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        jLayeredPane_VerProducto.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 170, 81, -1));

        jLabel_Descripcion.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Descripcion.setText("Descripcion");
        jLayeredPane_VerProducto.add(jLabel_Descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 70, 29));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Ver Producto");
        jLayeredPane_VerProducto.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 18, -1, -1));

        jLabel_datoDescrip.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel_datoDescrip.setForeground(new java.awt.Color(0, 51, 51));
        jLabel_datoDescrip.setText("DESCRIPCION");
        jLayeredPane_VerProducto.add(jLabel_datoDescrip, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 360, 29));

        jDialog_VerProducto.getContentPane().add(jLayeredPane_VerProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 210));

        jDialog_BuscarProductoPorCod.setTitle("Buscar Producto");
        jDialog_BuscarProductoPorCod.setMinimumSize(new java.awt.Dimension(320, 130));
        jDialog_BuscarProductoPorCod.setUndecorated(true);
        jDialog_BuscarProductoPorCod.setResizable(false);
        jDialog_BuscarProductoPorCod.setLocationRelativeTo(null);
        jDialog_BuscarProductoPorCod.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(295, 125));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_BusqueProducto.setText("Buscar");
        jButton_BusqueProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BusqueProductoActionPerformed(evt);
            }
        });
        jButton_BusqueProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_BusqueProductoKeyPressed(evt);
            }
        });
        jPanel1.add(jButton_BusqueProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, -1, -1));

        jButton_CancelaBusquedaProducto.setText("Cancelar");
        jButton_CancelaBusquedaProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelaBusquedaProductoActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_CancelaBusquedaProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ingrese el Codigo");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 55, -1, -1));

        jTextField_busqueProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_busqueProductoKeyPressed(evt);
            }
        });
        jPanel1.add(jTextField_busqueProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 185, -1));
        jPanel1.add(jLabel_CodNoEncontrado, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 119, 81, 13));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Buscar Producto");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 12, -1, -1));

        jDialog_BuscarProductoPorCod.getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 130));

        jDialog_DescuentoUnitario.setTitle("Descuento Unitario");
        jDialog_DescuentoUnitario.setMinimumSize(new java.awt.Dimension(430, 215));
        jDialog_DescuentoUnitario.setUndecorated(true);
        jDialog_DescuentoUnitario.setResizable(false);
        jDialog_DescuentoUnitario.setLocationRelativeTo(null);
        jDialog_DescuentoUnitario.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setPreferredSize(new java.awt.Dimension(429, 214));

        jLabel_DescripcionDescUnitario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel_DescripcionDescUnitario.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_DescripcionDescUnitario.setText("Descripcion");

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Precio Regular");

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Desc en %");

        jButton_IngresarDescuento.setText("Aceptar");
        jButton_IngresarDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_IngresarDescuentoActionPerformed(evt);
            }
        });
        jButton_IngresarDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_IngresarDescuentoKeyPressed(evt);
            }
        });

        jButton_CancelarDescuentoUnitario.setText("Cancelar");
        jButton_CancelarDescuentoUnitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelarDescuentoUnitarioActionPerformed(evt);
            }
        });

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Precio con Desc");

        jFormattedTextField_PrecioRegular.setEditable(false);
        jFormattedTextField_PrecioRegular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_PrecioRegular.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_PrecioRegular.setText("0.00");
        jFormattedTextField_PrecioRegular.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField_PrecioRegularPropertyChange(evt);
            }
        });

        jFormattedTextField_descUnitario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jFormattedTextField_descUnitario.setText("0.00");
        jFormattedTextField_descUnitario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFormattedTextField_descUnitarioMouseClicked(evt);
            }
        });
        jFormattedTextField_descUnitario.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField_descUnitarioPropertyChange(evt);
            }
        });
        jFormattedTextField_descUnitario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_descUnitarioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_descUnitarioKeyTyped(evt);
            }
        });

        jFormattedTextField_RebajaDelDesc.setEditable(false);
        jFormattedTextField_RebajaDelDesc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_RebajaDelDesc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_RebajaDelDesc.setText("0.00");

        jFormattedTextField_PrecioConDesc.setEditable(false);
        jFormattedTextField_PrecioConDesc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_PrecioConDesc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_PrecioConDesc.setText("0.00");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Descuento Unitario");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jFormattedTextField_descUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel_DescripcionDescUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 27, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jFormattedTextField_PrecioRegular)
                            .addComponent(jFormattedTextField_RebajaDelDesc)
                            .addComponent(jFormattedTextField_PrecioConDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton_IngresarDescuento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_CancelarDescuentoUnitario))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_DescripcionDescUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField_PrecioRegular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField_descUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField_RebajaDelDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField_PrecioConDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_CancelarDescuentoUnitario)
                    .addComponent(jButton_IngresarDescuento))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDialog_DescuentoUnitario.getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, -1));

        jDialog_CrearCliente.setTitle("Crear Cliente");
        jDialog_CrearCliente.setAlwaysOnTop(true);
        jDialog_CrearCliente.setMinimumSize(new java.awt.Dimension(330, 230));
        jDialog_CrearCliente.setModal(true);
        jDialog_CrearCliente.setUndecorated(true);
        jDialog_CrearCliente.setResizable(false);
        jDialog_CrearCliente.setLocationRelativeTo(null);
        jDialog_CrearCliente.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_nombreCliente.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_nombreCliente.setText("Nombre del Cliente");
        jPanel4.add(jLabel_nombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 55, -1, -1));

        jLabel_telefonoCliente.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_telefonoCliente.setText("Telefono");
        jPanel4.add(jLabel_telefonoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 86, 105, -1));

        jLabel_direccionCliente.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_direccionCliente.setText("Direccion");
        jPanel4.add(jLabel_direccionCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 116, 105, -1));

        jLabel_FechaCumpleanos.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_FechaCumpleanos.setText("Fecha de Cumpleanos");
        jPanel4.add(jLabel_FechaCumpleanos, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 154, -1, -1));

        jFormattedTextField_nombreCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_nombreClienteKeyTyped(evt);
            }
        });
        jPanel4.add(jFormattedTextField_nombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 52, 168, -1));

        jFormattedTextField_telefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0"))));
        jFormattedTextField_telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_telefonoKeyTyped(evt);
            }
        });
        jPanel4.add(jFormattedTextField_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 83, 168, -1));

        jFormattedTextField_direccionCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_direccionClienteKeyTyped(evt);
            }
        });
        jPanel4.add(jFormattedTextField_direccionCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 113, 168, -1));

        jButton_CrearCliente.setText("Aceptar");
        jButton_CrearCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearClienteActionPerformed(evt);
            }
        });
        jButton_CrearCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_CrearClienteKeyPressed(evt);
            }
        });
        jPanel4.add(jButton_CrearCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 197, -1, -1));

        jButton_CancelarCrearCliente.setText("Cancelar");
        jButton_CancelarCrearCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelarCrearClienteActionPerformed(evt);
            }
        });
        jPanel4.add(jButton_CancelarCrearCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(241, 197, -1, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Crear Cliente");
        jPanel4.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 12, -1, -1));
        jPanel4.add(dateChooserCombo_CrearCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, -1, -1));

        jDialog_CrearCliente.getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 230));

        jDialog_darVuelto.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog_darVuelto.setMinimumSize(new java.awt.Dimension(451, 461));
        jDialog_darVuelto.setModal(true);
        jDialog_darVuelto.setUndecorated(true);
        jDialog_darVuelto.setResizable(false);
        jDialog_darVuelto.setSize(440, 460);
        jDialog_darVuelto.setLocationRelativeTo(null);

        if (_callType == APARTADO_CALL){
            lbPagoTitle.setText("Pago de apartado");
        } else if (_callType == FACTURACION_CALL){
            lbPagoTitle.setText("Pago de factura");
        } else if (_callType == CREDITO_CALL){
            lbPagoTitle.setText("Pago de crédito");
        }

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setLayout(null);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("      Total Facturado");
        jPanel5.add(jLabel23);
        jLabel23.setBounds(0, 50, 420, 30);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Pago de contado");
        jPanel5.add(jLabel24);
        jLabel24.setBounds(10, 220, 200, 17);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Vuelto");
        jPanel5.add(jLabel25);
        jLabel25.setBounds(10, 320, 420, 30);

        jFormattedTextField_totalFact.setEditable(false);
        jFormattedTextField_totalFact.setForeground(new java.awt.Color(255, 0, 0));
        jFormattedTextField_totalFact.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_totalFact.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_totalFact.setText("0.00");
        jFormattedTextField_totalFact.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jPanel5.add(jFormattedTextField_totalFact);
        jFormattedTextField_totalFact.setBounds(10, 80, 430, 40);

        jFormattedTextField_pagoVueltoContado.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jFormattedTextField_pagoVueltoContado.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jFormattedTextField_pagoVueltoContado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFormattedTextField_pagoVueltoContadoMouseClicked(evt);
            }
        });
        jFormattedTextField_pagoVueltoContado.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField_pagoVueltoContadoPropertyChange(evt);
            }
        });
        jFormattedTextField_pagoVueltoContado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_pagoVueltoContadoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_pagoVueltoContadoKeyTyped(evt);
            }
        });
        jPanel5.add(jFormattedTextField_pagoVueltoContado);
        jFormattedTextField_pagoVueltoContado.setBounds(10, 250, 200, 40);

        jFormattedTextField_vuelto.setEditable(false);
        jFormattedTextField_vuelto.setForeground(new java.awt.Color(51, 0, 255));
        jFormattedTextField_vuelto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jFormattedTextField_vuelto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_vuelto.setText("0.00");
        jFormattedTextField_vuelto.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jPanel5.add(jFormattedTextField_vuelto);
        jFormattedTextField_vuelto.setBounds(20, 360, 420, 40);

        jButton_aceptarVuelto.setText("Aceptar");
        jButton_aceptarVuelto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_aceptarVueltoActionPerformed(evt);
            }
        });
        jButton_aceptarVuelto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_aceptarVueltoKeyPressed(evt);
            }
        });
        jPanel5.add(jButton_aceptarVuelto);
        jButton_aceptarVuelto.setBounds(260, 420, 90, 30);

        lbPagoTitle.setBackground(new java.awt.Color(0, 153, 255));
        lbPagoTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbPagoTitle.setForeground(new java.awt.Color(255, 255, 255));
        lbPagoTitle.setText("  Texto de Pago ");
        lbPagoTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbPagoTitle.setOpaque(true);
        jPanel5.add(lbPagoTitle);
        lbPagoTitle.setBounds(0, 0, 450, 40);

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Pago con tarjeta");
        jPanel5.add(jLabel27);
        jLabel27.setBounds(20, 140, 200, 20);

        jFormattedTextField_pagoVueltoTarjeta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jFormattedTextField_pagoVueltoTarjeta.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jFormattedTextField_pagoVueltoTarjeta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFormattedTextField_pagoVueltoTarjetaMouseClicked(evt);
            }
        });
        jFormattedTextField_pagoVueltoTarjeta.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField_pagoVueltoTarjetaPropertyChange(evt);
            }
        });
        jFormattedTextField_pagoVueltoTarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_pagoVueltoTarjetaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_pagoVueltoTarjetaKeyTyped(evt);
            }
        });
        jPanel5.add(jFormattedTextField_pagoVueltoTarjeta);
        jFormattedTextField_pagoVueltoTarjeta.setBounds(10, 170, 200, 40);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel28.setForeground(java.awt.Color.white);
        jLabel28.setText("c.");
        jPanel5.add(jLabel28);
        jLabel28.setBounds(230, 280, 20, 20);

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1);
        jButton1.setBounds(100, 420, 90, 30);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Pago con Dolares");
        jPanel5.add(jLabel26);
        jLabel26.setBounds(230, 140, 200, 20);

        jLabel21.setForeground(java.awt.Color.white);
        jLabel21.setText("Tipo de Cambio");
        jPanel5.add(jLabel21);
        jLabel21.setBounds(230, 170, 90, 30);

        jFormattedTextField_totalDolares.setEditable(false);
        jFormattedTextField_totalDolares.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jFormattedTextField_totalDolares.setText("0.00");
        jFormattedTextField_totalDolares.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jFormattedTextField_totalDolares.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField_totalDolaresPropertyChange(evt);
            }
        });
        jPanel5.add(jFormattedTextField_totalDolares);
        jFormattedTextField_totalDolares.setBounds(260, 270, 180, 40);

        jFormattedTextField_cantidadDolares.setForeground(new java.awt.Color(0, 153, 0));
        jFormattedTextField_cantidadDolares.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        jFormattedTextField_cantidadDolares.setText("0.00");
        jFormattedTextField_cantidadDolares.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jFormattedTextField_cantidadDolares.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFormattedTextField_cantidadDolaresMouseClicked(evt);
            }
        });
        jFormattedTextField_cantidadDolares.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField_cantidadDolaresPropertyChange(evt);
            }
        });
        jFormattedTextField_cantidadDolares.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_cantidadDolaresKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextField_cantidadDolaresKeyTyped(evt);
            }
        });
        jPanel5.add(jFormattedTextField_cantidadDolares);
        jFormattedTextField_cantidadDolares.setBounds(260, 220, 180, 40);

        jFormattedTextField_tipoCambio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        jFormattedTextField_tipoCambio.setText("500");
        jFormattedTextField_tipoCambio.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jFormattedTextField_tipoCambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField_tipoCambioActionPerformed(evt);
            }
        });
        jFormattedTextField_tipoCambio.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField_tipoCambioPropertyChange(evt);
            }
        });
        jFormattedTextField_tipoCambio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFormattedTextField_tipoCambioKeyReleased(evt);
            }
        });
        jPanel5.add(jFormattedTextField_tipoCambio);
        jFormattedTextField_tipoCambio.setBounds(320, 170, 120, 30);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setForeground(java.awt.Color.white);
        jLabel10.setText("$");
        jPanel5.add(jLabel10);
        jLabel10.setBounds(230, 230, 20, 20);

        jDialog_darVuelto.getContentPane().add(jPanel5, java.awt.BorderLayout.CENTER);

        setAlignmentX(0.0F);
        setAlignmentY(0.0F);
        setMinimumSize(new java.awt.Dimension(760, 400));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(760, 400));
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLayeredPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLayeredPane1KeyPressed(evt);
            }
        });

        jTable_Factura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable_Factura.setCellSelectionEnabled(true);
        jTable_Factura.setFillsViewportHeight(true);
        jTable_Factura.setSurrendersFocusOnKeystroke(true);
        jTable_Factura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable_FacturaKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Factura);

        jLayeredPane1.add(jScrollPane2);
        jScrollPane2.setBounds(60, 60, 700, 260);

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/searchLttBtt.png"))); // NOI18N
        jLabel22.setToolTipText("Buscar cliente");
        jLabel22.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });
        jLayeredPane1.add(jLabel22);
        jLabel22.setBounds(410, 26, 20, 20);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Total:");
        jLayeredPane1.add(jLabel12);
        jLabel12.setBounds(440, 350, 60, 20);

        jFormattedTextField_Total.setEditable(false);
        jFormattedTextField_Total.setForeground(new java.awt.Color(255, 0, 0));
        jFormattedTextField_Total.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_Total.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_Total.setText("0.00");
        jFormattedTextField_Total.setFocusable(false);
        jFormattedTextField_Total.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLayeredPane1.add(jFormattedTextField_Total);
        jFormattedTextField_Total.setBounds(510, 330, 180, 50);

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Cliente:");
        jLayeredPane1.add(jLabel16);
        jLabel16.setBounds(110, 20, 50, 30);

        jFormattedTextField_Cliente.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jFormattedTextField_Cliente.setAlignmentX(0.0F);
        jFormattedTextField_Cliente.setAlignmentY(0.0F);
        jFormattedTextField_Cliente.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jFormattedTextField_Cliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFormattedTextField_ClienteMouseClicked(evt);
            }
        });
        jFormattedTextField_Cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField_ClienteActionPerformed(evt);
            }
        });
        jFormattedTextField_Cliente.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextField_ClientePropertyChange(evt);
            }
        });
        jFormattedTextField_Cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField_ClienteKeyPressed(evt);
            }
        });
        jLayeredPane1.setLayer(jFormattedTextField_Cliente, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jFormattedTextField_Cliente);
        jFormattedTextField_Cliente.setBounds(150, 26, 250, 20);

        trashBtt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/trashBtt.png"))); // NOI18N
        trashBtt.setToolTipText("Eliminar fila seleccionada");
        trashBtt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        trashBtt.setMaximumSize(new java.awt.Dimension(40, 20));
        trashBtt.setMinimumSize(new java.awt.Dimension(40, 20));
        trashBtt.setPreferredSize(new java.awt.Dimension(40, 20));
        trashBtt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trashBttMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                trashBttMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                trashBttMouseExited(evt);
            }
        });
        jLayeredPane1.setLayer(trashBtt, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(trashBtt);
        trashBtt.setBounds(10, 120, 40, 40);

        saveBtt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/saveBtt.png"))); // NOI18N
        saveBtt.setToolTipText("Guardar factura");
        saveBtt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        saveBtt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveBttMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveBttMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveBttMouseExited(evt);
            }
        });
        jLayeredPane1.setLayer(saveBtt, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(saveBtt);
        saveBtt.setBounds(700, 340, 40, 40);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/panelNF.png"))); // NOI18N
        background.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        background.setAlignmentY(0.0F);
        background.setMinimumSize(new java.awt.Dimension(0, 0));
        background.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                backgroundComponentHidden(evt);
            }
        });
        jLayeredPane1.add(background);
        background.setBounds(0, 0, 760, 480);

        BuscarP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/searchBtt.png"))); // NOI18N
        BuscarP.setToolTipText("Eliminar fila seleccionada");
        BuscarP.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BuscarP.setMaximumSize(new java.awt.Dimension(40, 20));
        BuscarP.setMinimumSize(new java.awt.Dimension(40, 20));
        BuscarP.setPreferredSize(new java.awt.Dimension(40, 20));
        BuscarP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BuscarPMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BuscarPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BuscarPMouseExited(evt);
            }
        });
        jLayeredPane1.setLayer(BuscarP, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(BuscarP);
        BuscarP.setBounds(10, 70, 40, 40);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "San José", "Cartago", "Heredia" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jLayeredPane1.setLayer(jComboBox1, javax.swing.JLayeredPane.MODAL_LAYER);
        jLayeredPane1.add(jComboBox1);
        jComboBox1.setBounds(656, 26, 80, 20);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Restaurante:");
        jLayeredPane1.setLayer(jLabel6, javax.swing.JLayeredPane.MODAL_LAYER);
        jLayeredPane1.add(jLabel6);
        jLabel6.setBounds(580, 30, 70, 15);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
  /**
     * Este metodo permite mostrar toda la informacion del producto
     *
     * @param idProducto
     */
    private void verProducto(String idProducto) {
//        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
//        String articulo = AdminBD.verNombreProductoPorCodigo(idProducto);
//        BigDecimal PrecioUnitario = AdminBD.verPrecio(idProducto);
//        int cantidad = AdminBD.verCantidadInvGeneral(idProducto);
//        jLabel_datoCant.setText(Integer.toString(cantidad));
//        jLabel_datoNomb.setText(articulo);
//        jLabel_datoPrecio.setText(PrecioUnitario.toString());
//        String detalle = AdminBD.verDetalle(idProducto);
//        //Si en la base el detalle es null
//        //System.out.println("DETALLE = " + (detalle==null?"null":"".equals(detalle)?"vacío":detalle.toString()));
//        if (detalle == null) {
//            jLabel_datoDescrip.setText("Este producto no tiene ningún detalle");
//        } else {
//            jLabel_datoDescrip.setText(detalle);
//        }
//        jDialog_VerProducto.setVisible(true);

    }

    /**
     * Este metodo es para poder eliminar una fila de la tabla de crear factura
     */
    private void eliminarFila() {
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
//        int row = jTable_Factura.getSelectedRow();
//        ///Si se esta escribiendo en la celda para el editor y luego elimina la
//        // fila
//        if (!model.data.isEmpty()) {
//            if (jTable_Factura.isEditing()) {
//                jTable_Factura.getCellEditor().cancelCellEditing();
//                jTable_Factura.revalidate();
//                jTable_Factura.repaint();
//                jTable_Factura.requestFocus();
//
//            }
//            String subTotal = model.getValueAt(row, 4).toString();
//            if (subTotal != "") {
//                //Elimina un producto ya ingresado y actualiza el total
//                BigDecimal subtotal = new BigDecimal(subTotal);
//                model.removeRow(row);
//                BigDecimal totalFact = this.corregirDato(
//                        this.jFormattedTextField_SubTotal.getText());
//                this.jFormattedTextField_SubTotal.setValue(
//                        totalFact.subtract(subtotal));
//                jTable_Factura.changeSelection(row-1,0,false, false);
//                this.jFormattedTextField_desc.setValue(BigDecimal.ZERO);
//                jTable_Factura.revalidate();
//                jTable_Factura.repaint();
//                jTable_Factura.requestFocus();
//                
//            } else { //Si es vacio el subtotal significa que no tiene que actualizar
//                // el subtotal
//                model.removeRow(row);
//                jTable_Factura.changeSelection(row-1,0,false, false);
//                jTable_Factura.revalidate();
//                jTable_Factura.repaint();
//                jTable_Factura.requestFocus();
//
//            }
//        }
//        if (model.data.isEmpty()){
//            model.addRow(1);
//        }
    }    /**
     * Este metodo permite que se actualice el campo del total y la rebaja
     * cuando se inserta un descuento unitario en la tabla Factura.
     *
     * @param evt
     */
    private void jTable_FacturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable_FacturaKeyPressed
        int tecla = evt.getKeyCode();
        if (tecla == KeyEvent.VK_F9) {
            this.eliminarFila();
        } else {
            hotKeyPressEvt(evt);
        }

    }//GEN-LAST:event_jTable_FacturaKeyPressed
    

    /**
     * Este metodo permite que vuelva a la tabla y seleciones la fila donde
     * quedo o la siguiente en la tabla facturacion
     *
     * @param cantidad
     */
    private void setFocusTablaFact(int cantidad) {
        jTable_Factura.revalidate();
        jTable_Factura.repaint();
        jTable_Factura.changeSelection(jTable_Factura.getSelectedRow()
                + cantidad, jTable_Factura.getSelectedColumn(), false, false);
        jTable_Factura.requestFocus();
    }


    private void jButton_CrearProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearProductoActionPerformed
       // this.CrearProducto();
        

    }//GEN-LAST:event_jButton_CrearProductoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setFocusTablaFact(0);
        this.jDialog_VerProducto.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    private void clearCrearProducto() {
        this.jTextField_codigo.setText("");
        this.jTextField_nombre.setText("");
        this.jFormattedTextField_cantidadProducto.setText("0");
        this.jFormattedTextField_precioProducto.setText("0.00");

    }
    private void jButton_CancelarCrearProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelarCrearProductoActionPerformed
        this.clearCrearProducto();
        this.jDialog_CrearProducto.dispose();
        //Para que el usuario se mantenga en la tabla
        this.setFocusTablaFact(0);
    }//GEN-LAST:event_jButton_CancelarCrearProductoActionPerformed

    private void jButton_CrearProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_CrearProductoKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
           // this.CrearProducto();
        }
    }//GEN-LAST:event_jButton_CrearProductoKeyPressed
    /**
     * Permite buscar el producto cuando el usuario presiona el boton buscar
     * producto en crear factura
     */
    private void buscarProducto() {
//        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
//        String idProducto = this.jTextField_busqueProducto.getText();
//        boolean existeProducto = AdminBD.verSiExisteCod(idProducto);
//        if (existeProducto) {
//            this.jDialog_BuscarProductoPorCod.dispose();
//            this.verProducto(idProducto);
//            this.jTextField_busqueProducto.setText("");
//            this.jLabel_CodNoEncontrado.setText("");
//            return;
//        }
//        this.jLabel_CodNoEncontrado.setText("Cod. No Existe");
//        this.jTextField_busqueProducto.setText("");
//        this.jButton_BusqueProducto.transferFocus();
//        this.jButton_CancelaBusquedaProducto.transferFocus();
    }

    private void jButton_BusqueProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BusqueProductoActionPerformed
        this.buscarProducto();
    }//GEN-LAST:event_jButton_BusqueProductoActionPerformed

    private void jButton_CancelaBusquedaProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelaBusquedaProductoActionPerformed
        this.jDialog_BuscarProductoPorCod.dispose();
        this.jLabel_CodNoEncontrado.setText("");
        this.setFocusTablaFact(0);
    }//GEN-LAST:event_jButton_CancelaBusquedaProductoActionPerformed

    private void jTextField_busqueProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_busqueProductoKeyPressed
        if (evt.getKeyCode() == 10) {
            this.jTextField_busqueProducto.transferFocus();

        }
    }//GEN-LAST:event_jTextField_busqueProductoKeyPressed

    private void jButton_BusqueProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_BusqueProductoKeyPressed
        if (evt.getKeyCode() == 10) {
            this.buscarProducto();
        }
    }//GEN-LAST:event_jButton_BusqueProductoKeyPressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        if (evt.getKeyCode() == 10) {
            this.setFocusTablaFact(0);
            this.jDialog_VerProducto.dispose();
        }

    }//GEN-LAST:event_jButton2KeyPressed
    private void jFormattedTextField_precioProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_precioProductoKeyTyped
         int tecla = evt.getKeyChar();
        if (tecla == KeyEvent.VK_COMMA) {
            return;
        }
        if (tecla == KeyEvent.VK_PERIOD) {
            return;
        }
        if (!Character.isDigit(tecla) & !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();

        }

        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jFormattedTextField_precioProducto.transferFocus();

        }

    }//GEN-LAST:event_jFormattedTextField_precioProductoKeyTyped
    private void jFormattedTextField_precioProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_precioProductoKeyPressed
        if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_precioProductoKeyPressed

    private void jFormattedTextField_precioProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField_precioProductoFocusGained
        this.jFormattedTextField_precioProducto.selectAll();
    }//GEN-LAST:event_jFormattedTextField_precioProductoFocusGained

    private void jFormattedTextField_cantidadProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadProductoFocusGained
        this.jFormattedTextField_cantidadProducto.selectAll();
    }//GEN-LAST:event_jFormattedTextField_cantidadProductoFocusGained

    private void jFormattedTextField_cantidadProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadProductoKeyPressed
        if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_cantidadProductoKeyPressed

    private void jFormattedTextField_cantidadProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadProductoKeyTyped
        int tecla = evt.getKeyChar();

        if (!Character.isDigit(tecla) & !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();

        }

        int limite = 9;
        if (jFormattedTextField_cantidadProducto.getText().length() == limite) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jFormattedTextField_cantidadProducto.transferFocus();

        }
    }//GEN-LAST:event_jFormattedTextField_cantidadProductoKeyTyped
    /**
     * Este metodo permite guardar los productos en la factura que se esta
     * creando.
     */
    private void guardarProductosFactura() {
//        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
//        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
//        String[][] infoTablaFact = this.obtenerInfoTablaFact();
//        int rows = infoTablaFact.length;
//        int idFactura = Integer.parseInt(this.jLabel_NumerodeFact.getText());
//        //Recorre la informacion de la tabla para obtener los datos para 
//        //insertar los productos en la factura
//        for (int i = 0; i < rows; i++) {
//            //Si la fila esta vacia
//            String input = model.getValueAt(i, 0).toString();
//            if (!input.equals("") & input.length()>0 ) {
//                String idProducto = infoTablaFact[i][0];
//                int idVersion = AdminBD.veridVersionActivaProductoPorCodigo(idProducto);
//                String CantidadSinCorregir = infoTablaFact[i][2].toString();
//                BigDecimal cantidadB = this.StringtoBigDecimal(CantidadSinCorregir);
//                int cantidad = cantidadB.intValue();
//                String precioSinCorregir = infoTablaFact[i][3];
//                BigDecimal PrecioVenta = this.corregirDato(precioSinCorregir);
//                int idVersionFacturasProducto = AdminBD.verVersionDEFacturaActiva(idFactura);
//                //System.out.println(idProducto+" "+idVersion+" "+cantidad+" "+idFactura+" "+PrecioVenta+" "+idVersionFacturasProducto);
//                AdminBD.insertarProductoCantidadFact(idProducto, idVersion,
//                        cantidad, idFactura, PrecioVenta, idVersionFacturasProducto);
//                
//                if (_callType == FACTURACION_CALL) {
//
//                    this.crearMovimiento(DETALLE_FACT+""+idFactura, PrecioVenta.multiply(cantidadB), 2);
//                    this.guardaProductoEnMovimiento(idProducto, idVersion, cantidad, PrecioVenta);
//                }
//                if(_callType == MOD_FACT_CALL){
//                    this.eliminarMovimiento(DETALLE_FACT+""+idFactura);
//                    this.crearMovimiento(DETALLE_FACT+""+idFactura, PrecioVenta.multiply(cantidadB),2);
//                    this.guardaProductoEnMovimiento(idProducto, idVersion, cantidad, PrecioVenta);
//                
//                }
//                if(_callType == APARTADO_CALL){
//                    this.crearMovimiento(DETALLE_APART+""+idFactura, PrecioVenta.multiply(cantidadB),2);
//                    this.guardaProductoEnMovimiento(idProducto, idVersion, cantidad, PrecioVenta);
//                }
//                if(_callType == MOD_APART_CALL){
//                    this.eliminarMovimiento(DETALLE_APART+""+idFactura);
//                    this.crearMovimiento(DETALLE_APART+""+idFactura, PrecioVenta.multiply(cantidadB),2);
//                    this.guardaProductoEnMovimiento(idProducto, idVersion, cantidad, PrecioVenta);
//                }
//                
//                if(_callType == CREDITO_CALL){
//                    this.crearMovimiento(DETALLE_CRED+""+idFactura, PrecioVenta.multiply(cantidadB),2);
//                    this.guardaProductoEnMovimiento(idProducto, idVersion, cantidad, PrecioVenta);
//                }
//                if(_callType == MOD_CRED_CALL){
//                    this.eliminarMovimiento(DETALLE_CRED+""+idFactura);
//                    this.crearMovimiento(DETALLE_CRED+""+idFactura, PrecioVenta.multiply(cantidadB),2);
//                    this.guardaProductoEnMovimiento(idProducto, idVersion, cantidad, PrecioVenta);
//                }
//                
//
//            }
//        }
    }

    
    private boolean factSave(){
        return this.guardarFactura(CONCEPT_FACTURA);
    }
    /**
     * Se encarga de llamar el jdialog para terminar de realizar la factura.
     */
    public void beforeSave() {
//        if (_callType == FACTURACION_CALL){
//            
//            this.darVuelto(this.corregirDato(this.jFormattedTextField_Total.getText()));
//            
//        } 
//        else if (_callType == MOD_FACT_CALL) {
//           this.darVuelto(this.corregirDato(this.jFormattedTextField_Total.getText()));
//        }
//        
//            
//        else if (_callType == MOD_APART_CALL) {
//            modApartSave();
//               
//            }
//            
//            
//         else if (_callType == APARTADO_CALL) {
//            apartSave();
//                
//            }
//            
//        
//         else if (_callType == MOD_CRED_CALL) {
//            modCredSave();}
//                
//            
//            
//            
//        else if (_callType == CREDITO_CALL) {
//            credSave();
//            
//        } 
//        else {
//            System.out.println("ERROR AL GUARDAR FACTURA. CODIGO DE LLAMADO INCORRECTO");
//            
//        }
//        

    }
    /**
     * Se encarga de guardar las facturas de acuerdo a la accion es decir si es
     * un apartado, una factura o un credito.
     */
  //  public boolean guardarFacturadesdeVuelto() {
//        if (jTable_Factura.getValueAt(0, 0).equals("")) {
//            JOptionPane.showMessageDialog(
//                    null,
//                    "No se puede guardar facturas"
//                    + " si no tienen ningun producto",
//                    "Alert!", JOptionPane.ERROR_MESSAGE);
//            return false;
//        }
//        
//        if (_callType == FACTURACION_CALL){
//            if (factSave()) {
//                XMLConfiguracion xml = ManejoDeArchivos.XMLConfiguracion.getInstance();
//                BigDecimal dolares =this.StringtoBigDecimal(xml.getDolaresDelDia());
//                BigDecimal cantdolares = this.StringtoBigDecimal(this.jFormattedTextField_cantidadDolares.getText());
//                xml.setDolaresDelDia(dolares.add(cantdolares).toString());
//                return true;
//            }
//            return false;
//            
//        } 
//        else if (_callType == MOD_FACT_CALL) {
//            if(modFactSave()){
//                XMLConfiguracion xml = ManejoDeArchivos.XMLConfiguracion.getInstance();
//                BigDecimal dolares =this.StringtoBigDecimal(xml.getDolaresDelDia());
//                BigDecimal cantdolares = this.StringtoBigDecimal(this.jFormattedTextField_cantidadDolares.getText());
//                xml.setDolaresDelDia(dolares.add(cantdolares).toString());
//                return true;
//            }
//            return false;
//        }
//        
//            
//        else if (_callType == MOD_APART_CALL) {
//            this.devolverProductos();
//            this.modificaFactura();
//            this.guardarFactura(CONCEPT_APARTADO);
//            BigDecimal totalfact = this.corregirDato(this.jFormattedTextField_totalFact.getText());
//            BigDecimal totalTarjeta = this.StringtoBigDecimal(this.jFormattedTextField_pagoVueltoTarjeta.getText());
//            BigDecimal totalContado = totalfact.subtract(totalTarjeta);
//            this.crearApartado(totalTarjeta, totalContado, NewJDialog_PagoApartado.getInstance().
//                    getFecha());
//            return true;
//
//        } else if (_callType == APARTADO_CALL) {
//
//            this.guardarFactura(CONCEPT_APARTADO);
//            BigDecimal totalfact = this.corregirDato(this.jFormattedTextField_totalFact.getText());
//            BigDecimal totalTarjeta = this.StringtoBigDecimal(this.jFormattedTextField_pagoVueltoTarjeta.getText());
//            BigDecimal totalContado = totalfact.subtract(totalTarjeta);
//            this.crearApartado(totalTarjeta, totalContado, NewJDialog_PagoApartado.getInstance().
//                    getFecha());
//            return true;
//        } else if (_callType == MOD_CRED_CALL) {
//            this.devolverProductos();
//            this.modificaFactura();
//            this.guardarFactura(CONCEPT_CREDITO);
//            BigDecimal totalfact = this.corregirDato(this.jFormattedTextField_totalFact.getText());
//            BigDecimal totalTarjeta = this.StringtoBigDecimal(this.jFormattedTextField_pagoVueltoTarjeta.getText());
//            BigDecimal totalContado = totalfact.subtract(totalTarjeta);
//            this.crearApartado(totalTarjeta, totalContado, NewJDialog_PagoApartado.getInstance().
//                    getFecha());
//            return true;
//
//        } else if (_callType == CREDITO_CALL) {
//            this.guardarFactura(CONCEPT_CREDITO);
//            BigDecimal totalfact = this.corregirDato(this.jFormattedTextField_totalFact.getText());
//            BigDecimal totalTarjeta = this.StringtoBigDecimal(this.jFormattedTextField_pagoVueltoTarjeta.getText());
//            BigDecimal totalContado = totalfact.subtract(totalTarjeta);
//            this.crearApartado(totalTarjeta, totalContado, NewJDialog_PagoApartado.getInstance().
//                    getFecha());
//            return true;
//            
//        }        
//        else {
//            System.out.println("ERROR AL GUARDAR FACTURA. CODIGO DE LLAMADO INCORRECTO");
//            return false;
//        }
//       
       
        
        
  //  }    
    private void jButton_CancelarCrearProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_CancelarCrearProductoKeyPressed
        if (evt.getKeyCode() == 10) {
            this.jButton_CancelarCrearProducto.doClick();
        }
    }//GEN-LAST:event_jButton_CancelarCrearProductoKeyPressed
    /**
     * Este metodo permite actualizar la rebaja del descuento y el total cuando
     * se crear un descuento unitario
     *
     * @param evt
     */
    private void jFormattedTextField_PrecioRegularPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField_PrecioRegularPropertyChange
//        if (evt.getPropertyName().equals("value")) {
//            String text = evt.getNewValue().toString();
//            DecimalFormat decimalf = (DecimalFormat) NumberFormat.getInstance();
//            decimalf.setParseBigDecimal(true);
//            BigDecimal PrecioRegular = null;
//            try {
//                PrecioRegular = (BigDecimal) decimalf.parseObject(text);
//            } catch (ParseException ex) {
//                Logger.getLogger(
//                        MyTableModelListener_FACT.class.
//                        getName()).log(Level.SEVERE, null, ex);
//            }
//            this.jFormattedTextField_PrecioConDesc.setValue(PrecioRegular);
//            double descuentoAaplicar = Double.parseDouble(
//                    this.jFormattedTextField_descUnitario.getText());
//            if (descuentoAaplicar <= 100 & descuentoAaplicar > 0) {
//                double desc = descuentoAaplicar / 100;
//                BigDecimal descuento = BigDecimal.valueOf(desc);
//                BigDecimal PrecioNuevo;
//                BigDecimal rebaja = PrecioRegular.multiply(descuento);
//                PrecioNuevo = PrecioRegular.subtract(rebaja);
//                this.jFormattedTextField_RebajaDelDesc.setValue(rebaja);
//                this.jFormattedTextField_PrecioConDesc.setValue(PrecioNuevo);
//            } else {
//                return;
//
//            }
//
//        }

    }//GEN-LAST:event_jFormattedTextField_PrecioRegularPropertyChange
    /**
     * *
     * Este metodo permite actualizar el valor del precio con descuento y la
     * rebaja que se le hace a un producto cuando se le aplica un descuento
     * unitario
     *
     * @param evt
     */
    private void jFormattedTextField_descUnitarioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField_descUnitarioPropertyChange
        if (evt.getPropertyName().equals("value")) {
            String text = this.jFormattedTextField_PrecioRegular.getText();
            BigDecimal PrecioSinDesc = this.corregirDato(text);
            this.jFormattedTextField_PrecioConDesc.setValue(PrecioSinDesc);
            double descuentoAaplicar = Double.parseDouble(
                    evt.getNewValue().toString());
            if (descuentoAaplicar <= 100 & descuentoAaplicar > 0) {
                double desc = descuentoAaplicar / 100;
                BigDecimal descuento = BigDecimal.valueOf(desc);
                BigDecimal PrecioNuevo;
                BigDecimal rebaja = PrecioSinDesc.multiply(descuento);
                PrecioNuevo = PrecioSinDesc.subtract(rebaja);
                this.jFormattedTextField_RebajaDelDesc.setValue(rebaja);
                this.jFormattedTextField_PrecioConDesc.setValue(PrecioNuevo);
            } else if (descuentoAaplicar == 0.0) {
                this.jFormattedTextField_RebajaDelDesc.setValue(
                        descuentoAaplicar);
            } else {
                this.jFormattedTextField_descUnitario.setValue(0.00);
                JOptionPane.showMessageDialog(
                        null,
                        "No se puede aplicar un descuento de "
                        + descuentoAaplicar,
                        "Alert!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jFormattedTextField_descUnitarioPropertyChange

    private void jFormattedTextField_descUnitarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_descUnitarioKeyPressed
        if (evt.getKeyCode() == 10) {
            this.jButton_IngresarDescuento.requestFocusInWindow();
        }
        if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_descUnitarioKeyPressed
    private void jFormattedTextField_descUnitarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_descUnitarioKeyTyped
        int tecla = evt.getKeyChar();
        if (tecla == KeyEvent.VK_COMMA) {
            evt.consume();
        }
        if (tecla == KeyEvent.VK_PERIOD) {
            return;
        };
        if (!Character.isDigit(tecla) & !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_descUnitarioKeyTyped
    private void clearDescuentoUnitario() {
        
        this.jFormattedTextField_descUnitario.setValue(BigDecimal.ZERO);
        this.jFormattedTextField_RebajaDelDesc.setValue(BigDecimal.ZERO);
        this.jFormattedTextField_PrecioConDesc.setValue(BigDecimal.ZERO);
    }
    private void jButton_IngresarDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_IngresarDescuentoActionPerformed
//       
//        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
//        int row = jTable_Factura.getSelectedRow();
//        model.setValueAt(this.jFormattedTextField_PrecioConDesc.getValue(), row, 3);
//        this.setFocusTablaFact(1);
//        this.clearDescuentoUnitario();
//        this.jDialog_DescuentoUnitario.dispose();

    }//GEN-LAST:event_jButton_IngresarDescuentoActionPerformed
    private void jButton_CancelarDescuentoUnitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelarDescuentoUnitarioActionPerformed
        this.clearDescuentoUnitario();
        int row = jTable_Factura.getSelectedRow();
        this.setFocusTablaFact(1);
        this.jDialog_DescuentoUnitario.dispose();
    }//GEN-LAST:event_jButton_CancelarDescuentoUnitarioActionPerformed

    private void jFormattedTextField_descUnitarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFormattedTextField_descUnitarioMouseClicked
        this.jFormattedTextField_descUnitario.selectAll();
    }//GEN-LAST:event_jFormattedTextField_descUnitarioMouseClicked

    private void jButton_CancelarCrearClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelarCrearClienteActionPerformed
        this.jFormattedTextField_Cliente.setValue("Cliente Generico");
        this.jDialog_CrearCliente.setVisible(false);
        this.setFocusTablaFact(0);
    }//GEN-LAST:event_jButton_CancelarCrearClienteActionPerformed

    private void jButton_CrearClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearClienteActionPerformed
        this.crearCliente();
        this.setFocusTablaFact(0);
    }//GEN-LAST:event_jButton_CrearClienteActionPerformed

    private void jButton_CrearClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_CrearClienteKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            this.crearCliente();
        }

    }//GEN-LAST:event_jButton_CrearClienteKeyPressed

    private void trashBttMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trashBttMouseClicked
        this.eliminarFila();
    }//GEN-LAST:event_trashBttMouseClicked
    private boolean revisarProductosFactura(){
        if(this.jTable_Factura.getValueAt(0,0).equals("")){
            JOptionPane.showMessageDialog(
                        null,
                        "Por favor ingrese al menos un producto en la factura",
                        "No se puede crear facturas que no tengan productos", JOptionPane.ERROR_MESSAGE);
                  
            
            return false;
        }
        return true;
    }
//    private boolean revisarClienteFactura(){
////        if(jFormattedTextField_Cliente.hasFocus()){
////            Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
////            String cliente = this.jFormattedTextField_Cliente.getText();
////            if(AdminBD.verSiExisteCliente(cliente)){
////                return true;
////                
////            }
////            else{
////                this.jFormattedTextField_nombreCliente.setText(cliente);
////                this.jDialog_CrearCliente.setVisible(true);
////                return false;
////            }
////            
////        }
////        else{
////            return true;
////        }
//    }
    private void saveBttMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBttMouseClicked
//        if(revisarProductosFactura() & revisarClienteFactura()){
//        justSavePrincipalCall();}
    }//GEN-LAST:event_saveBttMouseClicked

    private void trashBttMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trashBttMouseEntered
        trashBtt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/trashBttOvr.png")));
    }//GEN-LAST:event_trashBttMouseEntered

    private void trashBttMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trashBttMouseExited
        trashBtt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/trashBtt.png")));
    }//GEN-LAST:event_trashBttMouseExited

    private void saveBttMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBttMouseEntered
        saveBtt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/saveBttOvr.png")));
    }//GEN-LAST:event_saveBttMouseEntered

    private void saveBttMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBttMouseExited
        saveBtt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/saveBtt.png")));
    }//GEN-LAST:event_saveBttMouseExited

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
       NewJDialog_Buscador buscador = new NewJDialog_Buscador();
        buscador.actualizaTablaParaClientes();
        String cliente = buscador.getCliente();
        this.jFormattedTextField_Cliente.setText(cliente);
        this.setFocusTablaFact(0);  
       
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jTextField_codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_codigoKeyTyped
        int limite = 30;
        if (jTextField_codigo.getText().length() >= limite) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();

        }
        if (Character.isLowerCase(evt.getKeyChar())) {
            evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        }
        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jTextField_codigo.transferFocus();

        }
    }//GEN-LAST:event_jTextField_codigoKeyTyped

    private void jTextField_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_nombreKeyTyped
        int limite = 30;
        if (jTextField_nombre.getText().length() >= limite) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();

        }
        if (Character.isLowerCase(evt.getKeyChar())) {
            evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        }
        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jTextField_nombre.transferFocus();

        }
    }//GEN-LAST:event_jTextField_nombreKeyTyped

    private void jButton_IngresarDescuentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_IngresarDescuentoKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            this.jButton_IngresarDescuento.doClick();
        
        }
    }//GEN-LAST:event_jButton_IngresarDescuentoKeyPressed

    private void jFormattedTextField_nombreClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_nombreClienteKeyTyped
        int limite = 30;
        if (jFormattedTextField_nombreCliente.getText().length() >= limite) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();

        }
        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jFormattedTextField_nombreCliente.transferFocus();

        }
    }//GEN-LAST:event_jFormattedTextField_nombreClienteKeyTyped

    private void jFormattedTextField_direccionClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_direccionClienteKeyTyped
        int limite = 60;
        if (jFormattedTextField_direccionCliente.getText().length() >= limite) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();

        }
        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jFormattedTextField_direccionCliente.transferFocus();

        }
    }//GEN-LAST:event_jFormattedTextField_direccionClienteKeyTyped

    private void jFormattedTextField_telefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_telefonoKeyTyped
        int limite = 30;
        if (jFormattedTextField_telefono.getText().length() >= limite) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();

        }
        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jFormattedTextField_telefono.transferFocus();
        }
    }//GEN-LAST:event_jFormattedTextField_telefonoKeyTyped

    private void jFormattedTextField_pagoVueltoContadoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField_pagoVueltoContadoPropertyChange

        if (evt.getPropertyName().equals("value")) {
             if (evt.getNewValue() == null){
                this.jFormattedTextField_pagoVueltoContado.setValue(BigDecimal.ZERO);
                
            }
            if (evt.getNewValue() != null) {
                String text = evt.getNewValue().toString();
                BigDecimal pagodolares = this.StringtoBigDecimal(this.jFormattedTextField_totalDolares.getText());
                BigDecimal pagoContado = this.StringtoBigDecimal(text);
                BigDecimal pagoTarjeta = this.StringtoBigDecimal(this.jFormattedTextField_pagoVueltoTarjeta.getText());
                BigDecimal total = this.corregirDato(this.jFormattedTextField_totalFact.getText());
                if (pagoContado.compareTo(BigDecimal.ZERO) == 0 & pagoTarjeta.compareTo(BigDecimal.ZERO) == 0 &pagodolares.compareTo(BigDecimal.ZERO)==0) {
                    this.jFormattedTextField_vuelto.setValue(BigDecimal.ZERO);
                    return;
                }
                this.jFormattedTextField_vuelto.setValue((pagoTarjeta.add(pagoContado).add(pagodolares)).subtract(total));

            }
            
        }
    }//GEN-LAST:event_jFormattedTextField_pagoVueltoContadoPropertyChange

    private void jFormattedTextField_pagoVueltoContadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_pagoVueltoContadoKeyTyped
        int tecla = evt.getKeyChar();
        if (tecla == KeyEvent.VK_COMMA) {
            return;
        }
        if (tecla == KeyEvent.VK_PERIOD) {
            return;
        }
        if (!Character.isDigit(tecla) & !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();

        }

        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jButton_aceptarVuelto.requestFocusInWindow();

        }
    }//GEN-LAST:event_jFormattedTextField_pagoVueltoContadoKeyTyped

    private void jButton_aceptarVueltoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_aceptarVueltoKeyPressed
        if(evt.getKeyChar()== KeyEvent.VK_ENTER){
            this.jButton_aceptarVuelto.doClick();
        
        }
    }//GEN-LAST:event_jButton_aceptarVueltoKeyPressed

    private void jButton_aceptarVueltoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_aceptarVueltoActionPerformed
        
//        if (!_vueltoPress){
//            
//            _vueltoPress = true;
//            if(this.StringtoBigDecimal(this.jFormattedTextField_vuelto.getValue().toString()).compareTo(BigDecimal.ZERO)<0){
//                  JOptionPane.showMessageDialog(
//                        null,
//                        "Por favor ingrese el pago del cliente correctamente",
//                        "Error vuelto negativo", JOptionPane.ERROR_MESSAGE);
//                  
//            }
//            else if(this.StringtoBigDecimal(this.jFormattedTextField_pagoVueltoTarjeta.getText()).compareTo(this.corregirDato(jFormattedTextField_totalFact.getText()))>0){
//                     
//                      this.jFormattedTextField_pagoVueltoTarjeta.setValue(BigDecimal.ZERO);
//                      this.jFormattedTextField_pagoVueltoTarjeta.requestFocusInWindow();
//                     
//                }
//            else if(this.StringtoBigDecimal(this.jFormattedTextField_pagoVueltoContado.getText()).compareTo(BigDecimal.ZERO)==0 &
//                    this.StringtoBigDecimal(this.jFormattedTextField_pagoVueltoTarjeta.getText()).compareTo(BigDecimal.ZERO)==0 &
//                    this.StringtoBigDecimal(this.jFormattedTextField_totalDolares.getText()).compareTo(BigDecimal.ZERO)==0){
//                JOptionPane.showMessageDialog(
//                        null,
//                        "Por favor ingrese el pago del cliente correctamente",
//                        "No se recibio ningun pago", JOptionPane.ERROR_MESSAGE);
//         }
//            else {
//                this.jDialog_darVuelto.dispose();
//                
//                if (!_justSave) {
//                    
//                    if (this.guardarFacturadesdeVuelto()) {
//                        if (_callType == FACTURACION_CALL | _callType == MOD_FACT_CALL) {
//                            this.imprimirFactura(this.jLabel_NumerodeFact.getText(),
//                                    this.jLabel_Fecha.getText(),
//                                    this.jFormattedTextField_Total.getText(),
//                                    this.jFormattedTextField_SubTotal.getText(),
//                                    this.jFormattedTextField_desc.getText(),
//                                    this.jFormattedTextField_DescuentoTotal.getText(),
//                                    this.jFormattedTextField_Cliente.getText(),
//                                    ManejoDeArchivos.XMLConfiguracion.getInstance().ObtenerUsuario());
//                        }
//                        if (_callType == APARTADO_CALL | _callType == MOD_APART_CALL | _callType == CREDITO_CALL | _callType == MOD_CRED_CALL) {
//                            this.imprimirApartadoCredito(this.jLabel_NumerodeFact.getText(),
//                                    this.jLabel_Fecha.getText(),
//                                    this.jFormattedTextField_Total.getText(),
//                                    this.jFormattedTextField_SubTotal.getText(),
//                                    this.jFormattedTextField_desc.getText(),
//                                    this.jFormattedTextField_DescuentoTotal.getText(),
//                                    this.jFormattedTextField_Cliente.getText(),
//                                    ManejoDeArchivos.XMLConfiguracion.getInstance().ObtenerUsuario());
//                        }
//                    }
//                } else {
//                    this.guardarFacturadesdeVuelto();
//                }
//                this.regresar();
//                
//            }
//            _vueltoPress = false;
//            
//            
//        }
    }//GEN-LAST:event_jButton_aceptarVueltoActionPerformed

    private void jFormattedTextField_pagoVueltoContadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFormattedTextField_pagoVueltoContadoMouseClicked
        this.jFormattedTextField_pagoVueltoContado.setValue(BigDecimal.ZERO);
        this.jFormattedTextField_pagoVueltoContado.selectAll();
    }//GEN-LAST:event_jFormattedTextField_pagoVueltoContadoMouseClicked

    private void jFormattedTextField_pagoVueltoContadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_pagoVueltoContadoKeyPressed
         if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_pagoVueltoContadoKeyPressed

    private void jFormattedTextField_pagoVueltoTarjetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFormattedTextField_pagoVueltoTarjetaMouseClicked
       
         this.jFormattedTextField_pagoVueltoTarjeta.setValue(BigDecimal.ZERO);
         this.jFormattedTextField_pagoVueltoTarjeta.selectAll();
    }//GEN-LAST:event_jFormattedTextField_pagoVueltoTarjetaMouseClicked

    private void jFormattedTextField_pagoVueltoTarjetaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField_pagoVueltoTarjetaPropertyChange
        if (evt.getPropertyName().equals("value")) {
            if (evt.getNewValue() == null){
                
                this.jFormattedTextField_pagoVueltoTarjeta.setValue(BigDecimal.ZERO);
                
                
            }
            if (evt.getNewValue() != null) {
                
                String text = evt.getNewValue().toString();
                BigDecimal pagodolares = this.StringtoBigDecimal(this.jFormattedTextField_totalDolares.getText());
                BigDecimal pagotarjeta = this.StringtoBigDecimal(text);
                BigDecimal pagocontado = this.StringtoBigDecimal(this.jFormattedTextField_pagoVueltoContado.getText());
                BigDecimal total = this.corregirDato(this.jFormattedTextField_totalFact.getText());
                if (pagotarjeta.compareTo(BigDecimal.ZERO) == 0 & pagocontado.compareTo(BigDecimal.ZERO) == 0 &pagodolares.compareTo(BigDecimal.ZERO)==0) {
                    this.jFormattedTextField_vuelto.setValue(BigDecimal.ZERO);
                    return;
                }
                /******* COMENTAR SI SE QUIERE QUE HAGA DESCUENTOS AUN SI PAGA
                 * CON TARJETA
                 */
                /*if (this.StringtoBigDecimal(this.jFormattedTextField_desc.getText()).compareTo(BigDecimal.ZERO) > 0 & pagotarjeta.compareTo(BigDecimal.ZERO) > 0)
                    {
                        JOptionPane.showMessageDialog(
                                null,
                                "No puede cancelar la factura con tarjeta porque se le aplico un descuento",
                                "Error no se paga con tarjeta ningun descuento", JOptionPane.ERROR_MESSAGE);
                        this.jFormattedTextField_pagoVueltoTarjeta.setValue(BigDecimal.ZERO);
                        this.jFormattedTextField_pagoVueltoTarjeta.requestFocusInWindow();
                        if (pagocontado.compareTo(BigDecimal.ZERO) == 0 & pagodolares.compareTo(BigDecimal.ZERO)==0) {
                            this.jFormattedTextField_vuelto.setValue(BigDecimal.ZERO);
                        }
                        return;
                    }
                */
                if(pagotarjeta.compareTo(total)>0){
                      JOptionPane.showMessageDialog(
                    null,
                    "El pago con tarjeta no puede superar el monto facturado",
                    "Alert!", JOptionPane.ERROR_MESSAGE);
                      this.jFormattedTextField_pagoVueltoTarjeta.setValue(BigDecimal.ZERO);
                      this.jFormattedTextField_pagoVueltoTarjeta.requestFocusInWindow();
                      if(pagocontado.compareTo(BigDecimal.ZERO)==0 & pagodolares.compareTo(BigDecimal.ZERO)==0){
                          this.jFormattedTextField_vuelto.setValue(BigDecimal.ZERO);
                      }
                }
                else  {
                this.jFormattedTextField_vuelto.setValue((pagotarjeta.add(pagocontado).add(pagodolares)).subtract(total));
                    return;
                }
                
               


            }

        }
    }//GEN-LAST:event_jFormattedTextField_pagoVueltoTarjetaPropertyChange

    private void jFormattedTextField_pagoVueltoTarjetaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_pagoVueltoTarjetaKeyPressed
         if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_pagoVueltoTarjetaKeyPressed

    private void jFormattedTextField_pagoVueltoTarjetaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_pagoVueltoTarjetaKeyTyped
        int tecla = evt.getKeyChar();
        if (tecla == KeyEvent.VK_COMMA) {
            return;
        }
        if (tecla == KeyEvent.VK_PERIOD) {
            return;
        }
        if (!Character.isDigit(tecla) & !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();

        }

        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jButton_aceptarVuelto.requestFocusInWindow();

        }
    }//GEN-LAST:event_jFormattedTextField_pagoVueltoTarjetaKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.jDialog_darVuelto.dispose();
        this.jFormattedTextField_pagoVueltoContado.setValue(BigDecimal.ZERO);
        this.jFormattedTextField_pagoVueltoTarjeta.setValue(BigDecimal.ZERO);
        this.jFormattedTextField_vuelto.setValue(BigDecimal.ZERO);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void passSellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passSellerActionPerformed
        
    }//GEN-LAST:event_passSellerActionPerformed

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        
    }//GEN-LAST:event_formPropertyChange

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        hotKeyPressEvt(evt);
    }//GEN-LAST:event_formKeyPressed

    private void jLayeredPane1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLayeredPane1KeyPressed
        hotKeyPressEvt(evt);
    }//GEN-LAST:event_jLayeredPane1KeyPressed

    private void backgroundComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_backgroundComponentHidden
        
    }//GEN-LAST:event_backgroundComponentHidden

    private void jFormattedTextField_cantidadDolaresPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadDolaresPropertyChange
        if (evt.getPropertyName().equals("value")) {

            if (evt.getNewValue() != null) {
                String text = evt.getNewValue().toString();
                String textoant = null;
                if (evt.getOldValue() != null) {
                    textoant = evt.getOldValue().toString();
                }
                BigDecimal tipoCambio = this.StringtoBigDecimal(this.jFormattedTextField_tipoCambio.getText());
                BigDecimal cantidadDolares = this.StringtoBigDecimal(text);
                this.jFormattedTextField_totalDolares.setValue(cantidadDolares.multiply(tipoCambio));
                
            }
        }
    }//GEN-LAST:event_jFormattedTextField_cantidadDolaresPropertyChange

    private void jFormattedTextField_totalDolaresPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField_totalDolaresPropertyChange
         if (evt.getPropertyName().equals("value")) {

            if (evt.getNewValue() != null) {
                String text = evt.getNewValue().toString();
                BigDecimal pagoContado = this.StringtoBigDecimal(this.jFormattedTextField_pagoVueltoContado.getText());
                BigDecimal pagoDolares = this.StringtoBigDecimal(text);
                BigDecimal pagoTarjeta = this.StringtoBigDecimal(this.jFormattedTextField_pagoVueltoTarjeta.getText());
                BigDecimal total = this.corregirDato(this.jFormattedTextField_totalFact.getText());
                if (pagoDolares.compareTo(BigDecimal.ZERO) == 0 & pagoTarjeta.compareTo(BigDecimal.ZERO) == 0 &pagoContado.compareTo(BigDecimal.ZERO)==0) {
                    this.jFormattedTextField_vuelto.setValue(BigDecimal.ZERO);
                    return;
                }
                this.jFormattedTextField_vuelto.setValue((pagoTarjeta.add(pagoDolares).add(pagoContado)).subtract(total));

            }
            
        }
    }//GEN-LAST:event_jFormattedTextField_totalDolaresPropertyChange

    private void jFormattedTextField_cantidadDolaresKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadDolaresKeyPressed
         if (evt.isControlDown()) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextField_cantidadDolaresKeyPressed

    private void jFormattedTextField_cantidadDolaresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadDolaresKeyTyped
         int tecla = evt.getKeyChar();
        if (tecla == KeyEvent.VK_COMMA) {
            return;
        }
        if (tecla == KeyEvent.VK_PERIOD) {
            return;
        }
        if (!Character.isDigit(tecla) & !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();

        }

        if (KeyEvent.VK_ENTER == evt.getKeyChar()) {
            this.jFormattedTextField_pagoVueltoTarjeta.requestFocusInWindow();

        }
    }//GEN-LAST:event_jFormattedTextField_cantidadDolaresKeyTyped

    private void jFormattedTextField_cantidadDolaresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFormattedTextField_cantidadDolaresMouseClicked
        this.jFormattedTextField_cantidadDolares.selectAll();
    }//GEN-LAST:event_jFormattedTextField_cantidadDolaresMouseClicked

    private void jFormattedTextField_tipoCambioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField_tipoCambioPropertyChange
        if (evt.getPropertyName().equals("value")) {

            if (evt.getNewValue() != null) {
                String text = evt.getNewValue().toString();
                BigDecimal tipoCambio = this.StringtoBigDecimal(text);
                BigDecimal cantidadDolares = this.StringtoBigDecimal(this.jFormattedTextField_cantidadDolares.getText());
                this.jFormattedTextField_totalDolares.setValue(cantidadDolares.multiply(tipoCambio));
                
            }
        }
    }//GEN-LAST:event_jFormattedTextField_tipoCambioPropertyChange

    private void jFormattedTextField_tipoCambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField_tipoCambioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField_tipoCambioActionPerformed

    private void jFormattedTextField_tipoCambioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_tipoCambioKeyReleased
        
    }//GEN-LAST:event_jFormattedTextField_tipoCambioKeyReleased

    private void jFormattedTextField_totalFactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField_totalFactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField_totalFactActionPerformed

    private void jFormattedTextField_ClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField_ClienteKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            this.setFocusTablaFact(0);
        } else {
            hotKeyPressEvt(evt);
        }
    }//GEN-LAST:event_jFormattedTextField_ClienteKeyPressed

    /**
     * Este metodo detecta si el usuario ingresa un cliente y verifica si este
     * existe o no para poder mostrarle la interfaz de crear un cliente.
     *
     * @param evt
     */
    private void jFormattedTextField_ClientePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextField_ClientePropertyChange
        //        if (evt.getPropertyName().equals("value")) {
            //            String cliente = this.jFormattedTextField_Cliente.getText();
            //            Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
            //            boolean existeCliente = AdminBD.verSiExisteCliente(cliente);
            //            if (existeCliente) {
                //                return;
                //
                //            } else {
                //                this.jFormattedTextField_nombreCliente.setText(cliente);
                //                this.jDialog_CrearCliente.setVisible(true);
                //
                //            }
            //
            //        }
    }//GEN-LAST:event_jFormattedTextField_ClientePropertyChange

    private void jFormattedTextField_ClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField_ClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField_ClienteActionPerformed

    private void jFormattedTextField_ClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFormattedTextField_ClienteMouseClicked
        this.jFormattedTextField_Cliente.selectAll();
    }//GEN-LAST:event_jFormattedTextField_ClienteMouseClicked

    private void BuscarPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BuscarPMouseClicked
       if (jTable_Factura.isEditing()) {
            jTable_Factura.getCellEditor().cancelCellEditing();

        }
        NewJDialog_Buscador buscador = new NewJDialog_Buscador();
        buscador.actualizaTablaParaInventario();
        String id = buscador.getIdProducto();
        if(id==null){
            return;
        }
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
        int row = this.jTable_Factura.getSelectedRow();
        model.setValueAt(id, row, 0);
        model.addRow(1);
        this.setFocusTablaFact(1);
    }//GEN-LAST:event_BuscarPMouseClicked

    private void BuscarPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BuscarPMouseEntered
         BuscarP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/searchBttOvr.png")));
    }//GEN-LAST:event_BuscarPMouseEntered

    private void BuscarPMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BuscarPMouseExited
        BuscarP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/searchBtt.png")));
    }//GEN-LAST:event_BuscarPMouseExited

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    /**
     * Este metodo devuelve toda la informacion de la tabla de crear factura
     *
     * @return
     */
//    private String[][] obtenerInfoTablaFact() {
//        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
//        int filas = model.getRowCount();
//        String[][] infoTablaFactura = new String[filas][5];
//        for (int i = 0; i < filas; i++) {
//            for (int j = 0; j < 5; j++) {
//                if (model.getValueAt(i, j) != null) {
//                    String om = model.getValueAt(i, j).toString();
//                    if (om.trim().length() != 0) {
//                        infoTablaFactura[i][j] = om;
//                    }
//                }
//            }
//        }
//        return infoTablaFactura;
//    }
    
    private void hotKeyPressEvt(java.awt.event.KeyEvent evt){
//        if (evt.getKeyCode() == evt.VK_F4){
//            printPrincipalCall();
//        } else if (evt.getKeyCode() == evt.VK_F2){
//            justSavePrincipalCall();
//        }
    }


    /**
     * Este metodo permite personalizar la tabla de crear Factura
     */
    public void personalizarTablaFactura() {
        String[] columnNames = {"Cod. Articulo", "Articulo", "Precio"};
        List<Object[]> data = new ArrayList<Object[]>();
//        //Agrega el modelo a la factura
        MyTableModel_FACT model = new MyTableModel_FACT(columnNames, data,true);
//        
        this.jTable_Factura.setModel(model);
//        //Agrega 1 filas
        model.addRow(1);
       jTable_Factura.changeSelection(0, 0, false, false);
       jTable_Factura.requestFocus();        
        this.jFormattedTextField_Total.setValue(BigDecimal.ZERO);
    }

    /**
     * De vuelve un String[] con toda la informacion de una fila de una tabla
     *
     * @param data //Viene de un consulta UNICAMENTE de una fila
     * @return
     */
    private String[] obtenerFila(Object[][] data) {
        //System.out.println("ESTO ES LO QUE QUIERO");
        int numFilas = data.length;
        String[] string = new String[numFilas];
        int numColumnas = data[0].length;
        for (int row = 0; row < numFilas; row++) {
            for (int column = 0; column < numColumnas; column++) {
                string[row] = data[row][column].toString();

            }

        }
        return string;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JLabel BuscarP;
    javax.swing.JLabel background;
    datechooser.beans.DateChooserCombo dateChooserCombo_CrearCliente;
    javax.swing.JButton jButton1;
    javax.swing.JButton jButton2;
    javax.swing.JButton jButton_BusqueProducto;
    javax.swing.JButton jButton_CancelaBusquedaProducto;
    javax.swing.JButton jButton_CancelarCrearCliente;
    javax.swing.JButton jButton_CancelarCrearProducto;
    javax.swing.JButton jButton_CancelarDescuentoUnitario;
    javax.swing.JButton jButton_CrearCliente;
    javax.swing.JButton jButton_CrearProducto;
    javax.swing.JButton jButton_IngresarDescuento;
    javax.swing.JButton jButton_aceptarVuelto;
    javax.swing.JComboBox<String> jComboBox1;
    javax.swing.JDialog jDialog_BuscarProductoPorCod;
    javax.swing.JDialog jDialog_CrearCliente;
    javax.swing.JDialog jDialog_CrearProducto;
    javax.swing.JDialog jDialog_DescuentoUnitario;
    javax.swing.JDialog jDialog_VerProducto;
    javax.swing.JDialog jDialog_darVuelto;
    javax.swing.JFormattedTextField jFormattedTextField_Cliente;
    javax.swing.JFormattedTextField jFormattedTextField_PrecioConDesc;
    javax.swing.JFormattedTextField jFormattedTextField_PrecioRegular;
    javax.swing.JFormattedTextField jFormattedTextField_RebajaDelDesc;
    javax.swing.JFormattedTextField jFormattedTextField_Total;
    javax.swing.JFormattedTextField jFormattedTextField_cantidadDolares;
    javax.swing.JFormattedTextField jFormattedTextField_cantidadProducto;
    javax.swing.JFormattedTextField jFormattedTextField_descUnitario;
    javax.swing.JFormattedTextField jFormattedTextField_direccionCliente;
    javax.swing.JFormattedTextField jFormattedTextField_nombreCliente;
    javax.swing.JFormattedTextField jFormattedTextField_pagoVueltoContado;
    javax.swing.JFormattedTextField jFormattedTextField_pagoVueltoTarjeta;
    javax.swing.JFormattedTextField jFormattedTextField_precioProducto;
    javax.swing.JFormattedTextField jFormattedTextField_telefono;
    javax.swing.JFormattedTextField jFormattedTextField_tipoCambio;
    javax.swing.JFormattedTextField jFormattedTextField_totalDolares;
    javax.swing.JFormattedTextField jFormattedTextField_totalFact;
    javax.swing.JFormattedTextField jFormattedTextField_vuelto;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel10;
    javax.swing.JLabel jLabel12;
    javax.swing.JLabel jLabel13;
    javax.swing.JLabel jLabel14;
    javax.swing.JLabel jLabel15;
    javax.swing.JLabel jLabel16;
    javax.swing.JLabel jLabel17;
    javax.swing.JLabel jLabel18;
    javax.swing.JLabel jLabel19;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel20;
    javax.swing.JLabel jLabel21;
    javax.swing.JLabel jLabel22;
    javax.swing.JLabel jLabel23;
    javax.swing.JLabel jLabel24;
    javax.swing.JLabel jLabel25;
    javax.swing.JLabel jLabel26;
    javax.swing.JLabel jLabel27;
    javax.swing.JLabel jLabel28;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel4;
    javax.swing.JLabel jLabel5;
    javax.swing.JLabel jLabel6;
    javax.swing.JLabel jLabel9;
    javax.swing.JLabel jLabel_Cantidad;
    javax.swing.JLabel jLabel_CodNoEncontrado;
    javax.swing.JLabel jLabel_Descripcion;
    javax.swing.JLabel jLabel_DescripcionDescUnitario;
    javax.swing.JLabel jLabel_FechaCumpleanos;
    javax.swing.JLabel jLabel_Nombre;
    javax.swing.JLabel jLabel_PrecioUnitario;
    javax.swing.JLabel jLabel_datoCant;
    javax.swing.JLabel jLabel_datoDescrip;
    javax.swing.JLabel jLabel_datoNomb;
    javax.swing.JLabel jLabel_datoPrecio;
    javax.swing.JLabel jLabel_direccionCliente;
    javax.swing.JLabel jLabel_nombreCliente;
    javax.swing.JLabel jLabel_telefonoCliente;
    javax.swing.JLayeredPane jLayeredPane1;
    javax.swing.JLayeredPane jLayeredPane_VerProducto;
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanel2;
    javax.swing.JPanel jPanel3;
    javax.swing.JPanel jPanel4;
    javax.swing.JPanel jPanel5;
    javax.swing.JScrollPane jScrollPane2;
    javax.swing.JTable jTable_Factura;
    javax.swing.JTextField jTextField_busqueProducto;
    javax.swing.JTextField jTextField_codigo;
    javax.swing.JTextField jTextField_nombre;
    javax.swing.JLabel lbPagoTitle;
    javax.swing.JLabel saveBtt;
    javax.swing.JLabel trashBtt;
    // End of variables declaration//GEN-END:variables
    /**
     * Este metodo permite crear una factura y guardala en la base de datos
     */
    private void crearFactura(String concepto) {
//        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
//        String Cliente = this.jFormattedTextField_Cliente.getText();
//        int idCliente = AdminBD.veridCliente(Cliente);
//        int idFactura = Integer.parseInt(this.jLabel_NumerodeFact.getText());
//        
//        String seller =  ManejoDeArchivos.XMLConfiguracion.getInstance().ObtenerUsuario();
//        //String seller = "admin";
//        
//        int idVendedor = AdminBD.veridVendedor(seller);
//        String detalle = this.jTextField_Detalle.getText();
//        String DescuentoSinCorregir =this.jFormattedTextField_desc.getText();
//        BigDecimal descuento = this.StringtoBigDecimal(DescuentoSinCorregir);
//        BigDecimal totalfact= this.corregirDato(this.jFormattedTextField_totalFact.getText());
//        BigDecimal totalTarjeta= this.StringtoBigDecimal(this.jFormattedTextField_pagoVueltoTarjeta.getText());
//        BigDecimal totalContado= totalfact.subtract(totalTarjeta);
//        //System.out.println(idFactura+" "+descuento+" "+tipoPago+" "+idCliente+" "+idVendedor+" "+detalle+" "+totalFact+" ");
//        
//        if (_callType == MOD_APART_CALL | _callType == APARTADO_CALL |_callType == MOD_CRED_CALL |_callType == CREDITO_CALL) {
//            AdminBD.crearFactura(idFactura, descuento, idCliente, idVendedor,
//                concepto, detalle,BigDecimal.ZERO,BigDecimal.ZERO,"A");
//        }
//        else{
//            AdminBD.crearFactura(idFactura, descuento, idCliente, idVendedor,
//                concepto, detalle,totalTarjeta,totalContado,"A");}
    }

    private void aplicarDescAlProducto(String idProducto, BigDecimal precio) {
        this.jDialog_DescuentoUnitario.setVisible(true);
        this.jFormattedTextField_PrecioConDesc.setValue(precio);
        this.jLabel_DescripcionDescUnitario.setText(idProducto);
        this.jFormattedTextField_PrecioRegular.setValue(precio);
        this.jFormattedTextField_descUnitario.requestFocusInWindow();
        this.jFormattedTextField_descUnitario.selectAll();

    }

    /**
     * Este metodo permite corregir el dato que tiene el signo de C y ademas que
     * puede tener comas ya que el tipo Decimal en la base solo puede tener
     * puntos y no comas.
     *
     * @param Dato
     * @return
     */
    private BigDecimal corregirDato(String Dato) {
        String datoAcorregir = Dato.replace("C", "");
        DecimalFormat decimalformat = (DecimalFormat) NumberFormat.getInstance();
        decimalformat.setParseBigDecimal(true);
        BigDecimal DatoCorregido = null;
        try {
            DatoCorregido = (BigDecimal) decimalformat.parseObject(datoAcorregir);
        } catch (ParseException ex) {
           // Logger.getLogger(MyTableModelListener_FACT.class.getName()).log(Level.SEVERE, null, ex);
        }
        return DatoCorregido;

    }

    private void crearCliente() {
//        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
//        String nombre = this.jFormattedTextField_nombreCliente.getText();
//        if(nombre.equals("")){
//            JOptionPane.showMessageDialog(
//                    null,
//                    "Por favor ingrese el nombre del cliente",
//                    "Alert!", JOptionPane.ERROR_MESSAGE);
//             this.jFormattedTextField_nombreCliente.requestFocusInWindow();
//             return;
//        }
//        String direccion = this.jFormattedTextField_direccionCliente.getText();
//        String telefono = this.jFormattedTextField_telefono.getText();
//        
//        String fechaCumpleanos = dateFormatIng.format(
//                dateChooserCombo_CrearCliente.getSelectedDate().
//                getTime());
//        
//        if (fechaCumpleanos.equals("")) {
//            fechaCumpleanos = null;
//        }
//        AdminBD.insertarCliente(nombre, direccion, telefono, fechaCumpleanos);
//        this.jFormattedTextField_Cliente.setValue(nombre);
//        this.jDialog_CrearCliente.dispose();
    }

    private boolean guardarFactura(String concepto) {
        if (jTable_Factura.isEditing()) {
            jTable_Factura.getCellEditor().cancelCellEditing();

        }
        this.crearFactura(concepto);
        this.guardarProductosFactura();
        return true;
    }

    
     
    
    public String fill(int length, String with) {
        StringBuilder sb = new StringBuilder(length);
        while (sb.length() < length) {
            sb.append(with);
        }
        return sb.toString();
    }

    public String fill(String value, int length, String with) {

        StringBuilder result = new StringBuilder(length);
        result.append(value);
        result.append(fill(Math.max(0, length - value.length()), with));

        return result.toString();

    }

    

    /**
     * Este metodo convierte un string que es un decimal a bigdecimal
     *
     * @param numero
     * @return
     */
    private BigDecimal StringtoBigDecimal(String numero) {
        DecimalFormat decimalfC = (DecimalFormat) NumberFormat.getInstance();
        decimalfC.setParseBigDecimal(true);
        BigDecimal numeroCorregido = null;
        try {
            numeroCorregido = (BigDecimal) decimalfC.parseObject(numero);
        } catch (ParseException ex) {
           // Logger.getLogger(JPanel_VerFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
        return numeroCorregido;

    }

    public void agregarListenerRenders() {
//        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
//        //Gana la atencion en el panel
//        jTable_Factura.requestFocus();
//        jTable_Factura.changeSelection(0, 0, false, false);
//        //AGREGA EL LISTENER QUE PERMITE HACER TODOS LOS EVENTOS DENTRO DE LA 
//        //TABLA DE FACTURA //IMPORTANTE ESTOS EVENTOS ESTAN EN LA CLASE DE
//        //MY TABLE MODEL LISTENER EN el metodo: tableChanged(TableModelEvent e)
//        this.jTable_Factura.getModel().addTableModelListener(
//                new MyTableModelListener_FACT(this.jTable_Factura, "",
//                        this.jFormattedTextField_SubTotal, AdminBD));
//        //Permite que la primera columna de Codigos se desplace segun lo que
//        // haya en la base de datos
//        AdminBD.verCodigos();
//        //Si no existen productos en la base que no los carge al editor
//        if (AdminBD.getData().length > 0) {
//            this.cargarSeleccionadorProductos();
//        }
//        //Costumisando Precio y Cantidad (Solo van a permitir numeros)
//        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
//        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
//
//        this.jTable_Factura.getColumnModel().getColumn(2).
//                setCellRenderer(rightRenderer);
//        this.jTable_Factura.getColumnModel().getColumn(3).
//                setCellRenderer(new CurrencyRender());
//        this.jTable_Factura.getColumnModel().getColumn(4).
//                setCellRenderer(new CurrencyRender());
//        this.jTable_Factura.getColumnModel().getColumn(2).
//                setCellEditor(new EditorDeCelda_Cantidad());
//        this.jTable_Factura.getColumnModel().getColumn(3).
//                setCellEditor(new EditorDeCeldaNumeros());
//        //Demasiado importante ******Permite que se pueda editar apenas se 
//        //ingresan datos*****
//        this.jTable_Factura.setSurrendersFocusOnKeystroke(true);
//
//        

    }


//    private void cargarSeleccionadorProductos() {
//        Direct_Control_BD AdminBD = Direct_Control_BD.getInstance();
//        AdminBD.verCodigos();
//        String[] idproductos = this.obtenerFila(AdminBD.getData());
//        this.jTable_Factura.getColumnModel().getColumn(0).
//                setCellEditor(new SeleccionadorEditor(idproductos, jTable_Factura));
//
//    }


//    private void regresar() {
//        JF_Facturacion.getInstance().restoreUser();
//        JF_Facturacion.getInstance().refreshActiveTable();
//        JF_Facturacion.getInstance().backOnWindow();
//    }
}
