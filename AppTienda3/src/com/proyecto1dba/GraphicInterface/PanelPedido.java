/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.proyecto1dba.GraphicInterface;

import com.proyecto1dba.AccessData.AcessData;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Jason Salazar
 */
public class PanelPedido extends javax.swing.JPanel {

    DateFormat dateFormatIng = new SimpleDateFormat("yyyy/MM/dd");
    public static final int FACTURACION_CALL = 0;
    public static final int DEVOLUCION_CALL = 1;
    public static final int CREDITO_CALL = 2;
    public static final int APARTADO_CALL = 3;
    public static final int MOD_FACT_CALL = 4;
    public static final int MOD_DEV_CALL = 5;
    public static final int MOD_CRED_CALL = 6;
    public static final int MOD_APART_CALL = 7;

    public static final String CONCEPT_FACTURA = "Cancelada";
    public static final String CONCEPT_APARTADO = "Apartado";
    public static final String CONCEPT_CREDITO = "Credito";
    public static final String CONCEPT_DEVOLUCION = "Devolucion";
    public static final String DETALLE_FACT = "Fact Num ";
    public static final String DETALLE_APART = "Apartado Num Fact ";
    public static final String DETALLE_CRED = "Credito Num Fact ";

    public int _callType;
    AcessData AD;
    private String idCliente;

    /**
     * Creates new form NewJPanel
     *
     * @param pCallType
     */
    public PanelPedido(int pCallType) {
        _callType = pCallType;
        initComponents();

    }

    PanelPedido() {
        initComponents();
        AD = new AcessData();
    }

    public void refreshFocus() {
        jTable_Factura.requestFocusInWindow();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Factura = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jFormattedTextField_Total = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        jFormattedTextField_Cliente = new javax.swing.JFormattedTextField();
        trashBtt = new javax.swing.JLabel();
        saveBtt = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        BuscarP = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setAlignmentX(0.0F);
        setAlignmentY(0.0F);
        setMinimumSize(new java.awt.Dimension(760, 400));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(760, 400));
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLayeredPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLayeredPane1KeyPressed(evt);
            }
        });

        jTable_Factura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable_Factura.setCellSelectionEnabled(true);
        jTable_Factura.setFillsViewportHeight(true);
        jTable_Factura.setSurrendersFocusOnKeystroke(true);
        jTable_Factura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable_FacturaKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Factura);

        jLayeredPane1.add(jScrollPane2);
        jScrollPane2.setBounds(60, 60, 700, 260);

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/searchLttBtt.png"))); // NOI18N
        jLabel22.setToolTipText("Buscar cliente");
        jLabel22.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });
        jLayeredPane1.add(jLabel22);
        jLabel22.setBounds(410, 26, 20, 20);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Total:");
        jLayeredPane1.add(jLabel12);
        jLabel12.setBounds(440, 350, 60, 20);

        jFormattedTextField_Total.setEditable(false);
        jFormattedTextField_Total.setForeground(new java.awt.Color(255, 0, 0));
        jFormattedTextField_Total.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("C#,##0.00;(C#,##0.00)"))));
        jFormattedTextField_Total.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField_Total.setText("0.00");
        jFormattedTextField_Total.setFocusable(false);
        jFormattedTextField_Total.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLayeredPane1.add(jFormattedTextField_Total);
        jFormattedTextField_Total.setBounds(510, 330, 180, 50);

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Cliente:");
        jLayeredPane1.add(jLabel16);
        jLabel16.setBounds(110, 20, 50, 30);

        jFormattedTextField_Cliente.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jFormattedTextField_Cliente.setAlignmentX(0.0F);
        jFormattedTextField_Cliente.setAlignmentY(0.0F);
        jFormattedTextField_Cliente.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jFormattedTextField_Cliente.setEnabled(false);
        jFormattedTextField_Cliente.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jFormattedTextField_Cliente.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jLayeredPane1.setLayer(jFormattedTextField_Cliente, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jFormattedTextField_Cliente);
        jFormattedTextField_Cliente.setBounds(150, 26, 250, 20);

        trashBtt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/trashBtt.png"))); // NOI18N
        trashBtt.setToolTipText("Eliminar fila seleccionada");
        trashBtt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        trashBtt.setMaximumSize(new java.awt.Dimension(40, 20));
        trashBtt.setMinimumSize(new java.awt.Dimension(40, 20));
        trashBtt.setPreferredSize(new java.awt.Dimension(40, 20));
        trashBtt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trashBttMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                trashBttMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                trashBttMouseExited(evt);
            }
        });
        jLayeredPane1.setLayer(trashBtt, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(trashBtt);
        trashBtt.setBounds(10, 120, 40, 40);

        saveBtt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/saveBtt.png"))); // NOI18N
        saveBtt.setToolTipText("Guardar factura");
        saveBtt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        saveBtt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveBttMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveBttMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveBttMouseExited(evt);
            }
        });
        jLayeredPane1.setLayer(saveBtt, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(saveBtt);
        saveBtt.setBounds(700, 340, 40, 40);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/panelNF.png"))); // NOI18N
        background.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        background.setAlignmentY(0.0F);
        background.setMinimumSize(new java.awt.Dimension(0, 0));
        background.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                backgroundComponentHidden(evt);
            }
        });
        jLayeredPane1.add(background);
        background.setBounds(0, 0, 760, 480);

        BuscarP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/searchBtt.png"))); // NOI18N
        BuscarP.setToolTipText("Eliminar fila seleccionada");
        BuscarP.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BuscarP.setMaximumSize(new java.awt.Dimension(40, 20));
        BuscarP.setMinimumSize(new java.awt.Dimension(40, 20));
        BuscarP.setPreferredSize(new java.awt.Dimension(40, 20));
        BuscarP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BuscarPMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BuscarPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BuscarPMouseExited(evt);
            }
        });
        jLayeredPane1.setLayer(BuscarP, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(BuscarP);
        BuscarP.setBounds(10, 70, 40, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Restaurante:");
        jLayeredPane1.setLayer(jLabel6, javax.swing.JLayeredPane.MODAL_LAYER);
        jLayeredPane1.add(jLabel6);
        jLabel6.setBounds(540, 30, 70, 15);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("El Buen Sabor #3");
        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.MODAL_LAYER);
        jLayeredPane1.add(jLabel1);
        jLabel1.setBounds(612, 30, 110, 16);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
      /**
     * Este metodo es para poder eliminar una fila de la tabla de crear factura
     */
    private void eliminarFila() {
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
        int row = jTable_Factura.getSelectedRow();
//        ///Si se esta escribiendo en la celda para el editor y luego elimina la
//        // fila
        if (!model.data.isEmpty()) {
            if (jTable_Factura.isEditing()) {
                jTable_Factura.getCellEditor().cancelCellEditing();
                jTable_Factura.revalidate();
                jTable_Factura.repaint();
                jTable_Factura.requestFocus();

            }
            String subTotal = model.getValueAt(row, 2).toString();
            if (subTotal != "") {
                //Elimina un producto ya ingresado y actualiza el total

                model.removeRow(row);

                jTable_Factura.changeSelection(row - 1, 0, false, false);
                jTable_Factura.revalidate();
                jTable_Factura.repaint();
                jTable_Factura.requestFocus();

            } else { //Si es vacio el subtotal significa que no tiene que actualizar
                // el subtotal
                model.removeRow(row);
                jTable_Factura.changeSelection(row - 1, 0, false, false);
                jTable_Factura.revalidate();
                jTable_Factura.repaint();
                jTable_Factura.requestFocus();

            }
        }
        if (model.data.isEmpty()) {
            model.addRow(1);
        }
        jFormattedTextField_Total.setText("₡ "+getTotal(model));
        
    }
    private String getTotal(MyTableModel_FACT model) {
        
    int filas = model.getRowCount();
        int result = 0;
        for (int i = 0; i < filas; i++) {
            if (model.getValueAt(i, 2) != null) {                
                String om = model.getValueAt(i, 2).toString();
                if (om.trim().length() != 0) {
                        result = result + Integer.parseInt(om);
                    
                }
            }

        }
        return result+"";
    }

    /**
     * Este metodo permite que se actualice el campo del total y la rebaja
     * cuando se inserta un descuento unitario en la tabla Factura.
     *
     * @param evt
     */
    private void jTable_FacturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable_FacturaKeyPressed
        int tecla = evt.getKeyCode();
        if (tecla == KeyEvent.VK_F9) {
            this.eliminarFila();
        } else {
            hotKeyPressEvt(evt);
        }

    }//GEN-LAST:event_jTable_FacturaKeyPressed

    /**
     * Este metodo permite que vuelva a la tabla y seleciones la fila donde
     * quedo o la siguiente en la tabla facturacion
     *
     * @param cantidad
     */
    private void setFocusTablaFact(int cantidad) {
        jTable_Factura.revalidate();
        jTable_Factura.repaint();
        jTable_Factura.changeSelection(jTable_Factura.getSelectedRow()
                + cantidad, jTable_Factura.getSelectedColumn(), false, false);
        jTable_Factura.requestFocus();
    }

    private boolean factSave() {
        return this.guardarFactura(CONCEPT_FACTURA);
    }

    /**
     * Se encarga de llamar el jdialog para terminar de realizar la factura.
     */
    public void beforeSave() {
//        if (_callType == FACTURACION_CALL){
//            
//            this.darVuelto(this.corregirDato(this.jFormattedTextField_Total.getText()));
//            
//        } 
//        else if (_callType == MOD_FACT_CALL) {
//           this.darVuelto(this.corregirDato(this.jFormattedTextField_Total.getText()));
//        }
//        
//            
//        else if (_callType == MOD_APART_CALL) {
//            modApartSave();
//               
//            }
//            
//            
//         else if (_callType == APARTADO_CALL) {
//            apartSave();
//                
//            }
//            
//        
//         else if (_callType == MOD_CRED_CALL) {
//            modCredSave();}
//                
//            
//            
//            
//        else if (_callType == CREDITO_CALL) {
//            credSave();
//            
//        } 
//        else {
//            System.out.println("ERROR AL GUARDAR FACTURA. CODIGO DE LLAMADO INCORRECTO");
//            
//        }
//        

    }


    private void trashBttMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trashBttMouseClicked
        this.eliminarFila();
    }//GEN-LAST:event_trashBttMouseClicked
    private boolean revisarProductosFactura() {
        if (this.jTable_Factura.getValueAt(0, 0).equals("")) {
            JOptionPane.showMessageDialog(
                    null,
                    "Por favor ingrese al menos un producto en el pedido",
                    "No se puede crear pedidos que no tengan productos", JOptionPane.ERROR_MESSAGE);

            return false;
        }
        return true;
    }

    private boolean revisarCliente() {
        if (jFormattedTextField_Cliente.getText().equals("")) {
            JOptionPane.showMessageDialog(
                    null,
                    "Por favor ingrese un cliente",
                    "Cliente no valido", JOptionPane.ERROR_MESSAGE);

            return false;
        }
        return true;
    }

    private void saveBttMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBttMouseClicked
        if (revisarProductosFactura() & revisarCliente()) {

            AD.CrearPedido("3", "1", 
                  idCliente, getListPed());
            
            AD.GuardarPedidoCentral("3", "1", 
                  idCliente, getListPed());
            
            JOptionPane.showMessageDialog(
                    null,
                    "El Pedido se realizó correctamente",
                    "Hacer Pedido", JOptionPane.PLAIN_MESSAGE);
            
            clean();

        }
    }//GEN-LAST:event_saveBttMouseClicked

    private void trashBttMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trashBttMouseEntered
        trashBtt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/trashBttOvr.png")));
    }//GEN-LAST:event_trashBttMouseEntered

    private void trashBttMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trashBttMouseExited
        trashBtt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/trashBtt.png")));
    }//GEN-LAST:event_trashBttMouseExited

    private void saveBttMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBttMouseEntered
        saveBtt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/saveBttOvr.png")));
    }//GEN-LAST:event_saveBttMouseEntered

    private void saveBttMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBttMouseExited
        saveBtt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/saveBtt.png")));
    }//GEN-LAST:event_saveBttMouseExited

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        NewJDialog_Buscador buscador = new NewJDialog_Buscador();
        buscador.actualizaTablaParaClientes();
        String nombreCliente = buscador.getCliente();
        idCliente = buscador.getidCliente();
        this.jFormattedTextField_Cliente.setText(nombreCliente);        
        this.setFocusTablaFact(0);

    }//GEN-LAST:event_jLabel22MouseClicked

    private void passSellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passSellerActionPerformed

    }//GEN-LAST:event_passSellerActionPerformed

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange

    }//GEN-LAST:event_formPropertyChange

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        hotKeyPressEvt(evt);
    }//GEN-LAST:event_formKeyPressed

    private void jLayeredPane1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLayeredPane1KeyPressed
        hotKeyPressEvt(evt);
    }//GEN-LAST:event_jLayeredPane1KeyPressed

    private void backgroundComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_backgroundComponentHidden

    }//GEN-LAST:event_backgroundComponentHidden

    private void jFormattedTextField_totalFactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField_totalFactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField_totalFactActionPerformed

    private void BuscarPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BuscarPMouseClicked
        if (jTable_Factura.isEditing()) {
            jTable_Factura.getCellEditor().cancelCellEditing();

        }
        NewJDialog_Buscador buscador = new NewJDialog_Buscador();
        buscador.actualizaTablaParaInventario();
        String id = buscador.getIdProducto();
        if (id == null) {
            return;
        }
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
        int row = this.jTable_Factura.getSelectedRow();
        model.setValueAt(id, row, 0);
        model.addRow(1);
        this.setFocusTablaFact(1);
    }//GEN-LAST:event_BuscarPMouseClicked

    private void BuscarPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BuscarPMouseEntered
        BuscarP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/searchBttOvr.png")));
    }//GEN-LAST:event_BuscarPMouseEntered

    private void BuscarPMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BuscarPMouseExited
        BuscarP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.proyecto1dba.Images/searchBtt.png")));
    }//GEN-LAST:event_BuscarPMouseExited
    /**
     * Este metodo devuelve toda la informacion de la tabla de crear factura
     *
     * @return
     */
    private String[][] obtenerInfoTablaFact() {
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
        int filas = model.getRowCount();
        String[][] infoTablaFactura = new String[filas][3];
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < 3; j++) {
                if (model.getValueAt(i, j) != null) {
                    String om = model.getValueAt(i, j).toString();
                    if (om.trim().length() != 0) {
                        infoTablaFactura[i][j] = om;
                    }
                }
            }
        }
        return infoTablaFactura;
    }

    private void hotKeyPressEvt(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == evt.VK_F4) {
            //printPrincipalCall();
        } else if (evt.getKeyCode() == evt.VK_F2) {
            //justSavePrincipalCall();
        }
    }

    /**
     * Este metodo permite personalizar la tabla de crear Factura
     */
    public void personalizarTablaFactura() {
        String[] columnNames = {"Cod. Articulo", "Articulo", "Precio"};
        List<Object[]> data = new ArrayList<Object[]>();
//        //Agrega el modelo a la factura
        MyTableModel_FACT model = new MyTableModel_FACT(columnNames, data, true);
//        
        this.jTable_Factura.setModel(model);
//        //Agrega 1 filas
        model.addRow(1);
        jTable_Factura.changeSelection(0, 0, false, false);
        jTable_Factura.requestFocus();
        this.jFormattedTextField_Total.setValue(BigDecimal.ZERO);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JLabel BuscarP;
    javax.swing.JLabel background;
    javax.swing.JFormattedTextField jFormattedTextField_Cliente;
    javax.swing.JFormattedTextField jFormattedTextField_Total;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel12;
    javax.swing.JLabel jLabel16;
    javax.swing.JLabel jLabel22;
    javax.swing.JLabel jLabel6;
    javax.swing.JLayeredPane jLayeredPane1;
    javax.swing.JScrollPane jScrollPane2;
    javax.swing.JTable jTable_Factura;
    javax.swing.JLabel saveBtt;
    javax.swing.JLabel trashBtt;
    // End of variables declaration//GEN-END:variables
    /**
     * Este metodo permite crear una factura y guardala en la base de datos
     */
    private void crearFactura(String concepto) {

    }

    private boolean guardarFactura(String concepto) {
        if (jTable_Factura.isEditing()) {
            jTable_Factura.getCellEditor().cancelCellEditing();

        }
        this.crearFactura(concepto);
        // this.guardarProductosFactura();
        return true;
    }

//    public String fill(int length, String with) {
//        StringBuilder sb = new StringBuilder(length);
//        while (sb.length() < length) {
//            sb.append(with);
//        }
//        return sb.toString();
//    }
//
//    public String fill(String value, int length, String with) {
//
//        StringBuilder result = new StringBuilder(length);
//        result.append(value);
//        result.append(fill(Math.max(0, length - value.length()), with));
//
//        return result.toString();
//
//    }
    public void agregarListenerRenders() {
        jTable_Factura.requestFocus();
        jTable_Factura.changeSelection(0, 0, false, false);

        this.jTable_Factura.getModel().addTableModelListener(
                new MyTableModelListener_FACT(this.jTable_Factura, "",
                        this.jFormattedTextField_Total));

        this.cargarSeleccionadorProductos();

        //Costumisando Precio (Solo van a permitir numeros)
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
//
        this.jTable_Factura.getColumnModel().getColumn(2).
                setCellRenderer(new CurrencyRender());
//    
        this.jTable_Factura.getColumnModel().getColumn(2).
                setCellEditor(new EditorDeCeldaNumeros());

        this.jTable_Factura.setSurrendersFocusOnKeystroke(true);

    }

    private void cargarSeleccionadorProductos() {
        String[] idproductos = AD.getIdsProducto();
        this.jTable_Factura.getColumnModel().getColumn(0).
                setCellEditor(new SeleccionadorEditor(
                        idproductos, jTable_Factura));

    }

    private String getListPed() {
        MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
        int filas = model.getRowCount();
        String result = "";
        for (int i = 0; i < filas; i++) {
            if (model.getValueAt(i, 0) != null) {                
                String om = model.getValueAt(i, 0).toString();
                if (om.trim().length() != 0) {
                    if(result.length()>0){
                         result = result+","+om;
                    }
                    else{
                        result = om;
                    }
                }
            }

        }
        return result;
    }
    
    

    private void clean() {
       jFormattedTextField_Cliente.setText("");
       MyTableModel_FACT model = (MyTableModel_FACT) jTable_Factura.getModel();
       int numFilas  = model.getRowCount();
        for (int i = 0; i < numFilas; i++) {
            System.out.println(i);
            model.removeRow(0); 
            
        }
        model.addRow(1);
        jTable_Factura.changeSelection(0, 0, false, false);
        jTable_Factura.revalidate();
        jTable_Factura.repaint();
        jTable_Factura.requestFocus();
        
        jFormattedTextField_Total.setText("");
      
    }

}
